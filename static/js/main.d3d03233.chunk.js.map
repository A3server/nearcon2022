{"version":3,"sources":["App.js","index.js"],"names":["PixelPrice","BN","NearConfig","networkId","nodeUrl","contractName","walletUrl","Avocado","role","aria-label","className","Banana","Cucumber","Berry","intToColor","c","toString","padStart","int2hsv","cInt","substr","r","parseInt","g","b","v","Math","max","min","h","transparentColor","a","generateGamma","hue","gammaColors","i","push","decodeLine","line","buf","Buffer","from","length","Error","pixels","color","readUInt32LE","ownerIndex","App","props","colors","map","toLowerCase","currentColor","floor","random","substring","state","connected","signedIn","accountId","pendingPixels","boardLoaded","selectedCell","pickerColor","pickingColor","owners","accounts","highlightedAccountIndex","selectedOwnerIndex","farmingBanana","_buttonDown","_oldCounts","_numFailedTxs","_balanceRefreshTimer","canvasRef","React","createRef","_context","_lines","_queue","_pendingPixels","_refreshBoardTimer","_sendQueueTimer","_stopRefreshTime","Date","getTime","_accounts","_initNear","then","setState","_accountId","canvas","this","current","getContext","mouseMove","e","x","y","touches","rect","target","getBoundingClientRect","targetTouches","clientX","left","clientY","top","offsetX","offsetY","trunc","clientWidth","clientHeight","cell","JSON","stringify","renderCanvas","pickColor","saveColor","drawPixel","preventDefault","addEventListener","mouseDown","unselectCell","mouseUp","buttons","document","altKey","enablePickColor","disablePickColor","console","log","slice","_contract","draw","concat","Promise","all","refreshBoard","refreshAccountStats","forEach","p","_pending","ready","clearTimeout","_sendQueue","setTimeout","_pingQueue","account","avocadoBalance","account_id","accountIndex","account_index","parseFloat","avocado_balance","_pixelCost","bananaBalance","banana_balance","numPixels","num_pixels","farmingPreference","farming_preference","startTime","avocadoPixels","bananaPixels","avocadoRewardPerMs","bananaRewardPerMs","get_account","parseAccount","get_account_by_index","getAccount","clearInterval","setInterval","t","Object","assign","keyStore","nearAPI","BrowserLocalStorageKeyStore","deps","near","_keyStore","_near","_walletConnection","getAccountId","_account","viewMethods","changeMethods","get_pixel_cost","_lineVersions","Array","fill","forced","hidden","get_line_versions","lineVersions","needLines","requestLines","lines","get_lines","results","flat","lineIndex","_refreshOwners","counts","sortedKeys","keys","sort","getAccountByIndex","ctx","j","fillStyle","fillRect","CellWidth","CellHeight","beginPath","strokeStyle","lineWidth","stroke","closePath","arc","PI","requestSignIn","signOut","hsl","changeColor","newColor","index","indexOf","splice","rgb","amount","requiredBalance","muln","buy_tokens","select_farming_preference","berry","content","onClick","logOut","Balance","detailed","onChange","switchBerry","checked","height","width","offColor","onColor","uncheckedIcon","checkedIcon","buyTokens","disableAlpha","hueColorChange","triangle","onChangeComplete","style","marginBottom","aria-hidden","href","ref","Leaderboard","setHover","Component","fraction","avacadoBalance","avocadoFarm","bananaFarm","toFixed","owner","Owner","key","isSelected","isHighlighted","onMouseEnter","onMouseLeave","Account","shortAccountId","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d3d03233.chunk.js","sourcesContent":["import \"./App.scss\";\nimport React from 'react';\nimport BN from 'bn.js';\nimport * as nearAPI from 'near-api-js'\nimport { HuePicker, GithubPicker } from 'react-color'\nimport Switch from \"react-switch\"\n\nconst PixelPrice = new BN(\"10000000000000000000000\");\nconst IsMainnet = true;\nconst TestNearConfig = {\n  networkId: 'testnet',\n  nodeUrl: 'https://rpc.testnet.near.org',\n  contractName: 'dev-1604708520705-2360364',\n  walletUrl: 'https://wallet.testnet.near.org',\n};\nconst MainNearConfig = {\n  networkId: 'mainnet',\n  nodeUrl: 'https://rpc.mainnet.near.org',\n  contractName: 'berryclub.ek.near',\n  walletUrl: 'https://wallet.near.org',\n};\nconst NearConfig = IsMainnet ? MainNearConfig : TestNearConfig;\n\nconst Avocado = <span role=\"img\" aria-label=\"avocado\" className=\"berry\">🥑</span>;\nconst Banana = <span role=\"img\" aria-label=\"banana\" className=\"berry\">🍌</span>;\nconst Cucumber = <span role=\"img\" aria-label=\"cucumber\" className=\"berry\">🥒</span>;\n\nconst Berry = {\n  Avocado: 'Avocado',\n  Banana: 'Banana',\n};\n\nconst BoardHeight = 50;\nconst BoardWidth = 50;\nconst NumLinesPerFetch = 10;\nconst ExpectedLineLength = 4 + 8 * BoardWidth;\nconst CellWidth = 16;\nconst CellHeight = 16;\nconst MaxNumColors = 31;\nconst BatchOfPixels = 30;\n// 500 ms\nconst BatchTimeout = 500;\nconst RefreshBoardTimeout = 1000;\nconst MaxWorkTime = 10 * 60 * 1000;\n\nconst intToColor = (c) => `#${c.toString(16).padStart(6, '0')}`;\nconst int2hsv = (cInt) => {\n  cInt = intToColor(cInt).substr(1)\n  const r = parseInt(cInt.substr(0, 2), 16) / 255\n  const g = parseInt(cInt.substr(2, 2), 16) / 255\n  const b = parseInt(cInt.substr(4, 2), 16) / 255\n  let v=Math.max(r,g,b), c=v-Math.min(r,g,b);\n  let h= c && ((v===r) ? (g-b)/c : ((v===g) ? 2+(b-r)/c : 4+(r-g)/c));\n  return [60*(h<0?h+6:h), v&&c/v, v];\n}\nconst transparentColor = (c, a) => `rgba(${(c >> 16) / 1}, ${((c >> 8) & 0xff) / 1}, ${(c & 0xff) / 1}, ${a})`\nconst generateGamma = (hue) => {\n  const gammaColors = [];\n  for (let i = 0; i < MaxNumColors; ++i) {\n    gammaColors.push(`hsl(${hue}, 100%, ${100 * i / (MaxNumColors - 1)}%)`);\n  }\n  return gammaColors;\n};\nconst decodeLine = (line) => {\n  let buf = Buffer.from(line, 'base64');\n  if (buf.length !== ExpectedLineLength) {\n    throw new Error(\"Unexpected encoded line length\");\n  }\n  let pixels = []\n  for (let i = 4; i < buf.length; i += 8) {\n    let color = buf.readUInt32LE(i);\n    let ownerIndex = buf.readUInt32LE(i + 4);\n    pixels.push({\n      color,\n      ownerIndex,\n    })\n  }\n  return pixels;\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const colors = [\"#000000\", \"#666666\", \"#aaaaaa\", \"#FFFFFF\", \"#F44E3B\", \"#D33115\", \"#9F0500\", \"#FE9200\", \"#E27300\", \"#C45100\", \"#FCDC00\", \"#FCC400\", \"#FB9E00\", \"#DBDF00\", \"#B0BC00\", \"#808900\", \"#A4DD00\", \"#68BC00\", \"#194D33\", \"#68CCCA\", \"#16A5A5\", \"#0C797D\", \"#73D8FF\", \"#009CE0\", \"#0062B1\", \"#AEA1FF\", \"#7B64FF\", \"#653294\", \"#FDA1FF\", \"#FA28FF\", \"#AB149E\"].map((c) => c.toLowerCase());\n    const currentColor = parseInt(colors[Math.floor(Math.random() * colors.length)].substring(1), 16);\n\n    this.state = {\n      connected: false,\n      signedIn: false,\n      accountId: null,\n      pendingPixels: 0,\n      boardLoaded: false,\n      selectedCell: null,\n      currentColor,\n      pickerColor: intToColor(currentColor),\n      colors,\n      gammaColors: generateGamma(0),\n      pickingColor: false,\n      owners: [],\n      accounts: {},\n      highlightedAccountIndex: -1,\n      selectedOwnerIndex: false,\n      farmingBanana: false,\n    };\n\n    this._buttonDown = false;\n    this._oldCounts = {};\n    this._numFailedTxs = 0;\n    this._balanceRefreshTimer = null;\n    this.canvasRef = React.createRef();\n    this._context = false;\n    this._lines = false;\n    this._queue = [];\n    this._pendingPixels = [];\n    this._refreshBoardTimer = null;\n    this._sendQueueTimer = null;\n    this._stopRefreshTime = new Date().getTime() + MaxWorkTime;\n    this._accounts = {};\n\n    this._initNear().then(() => {\n      this.setState({\n        connected: true,\n        signedIn: !!this._accountId,\n        accountId: this._accountId,\n      });\n    });\n  }\n\n  componentDidMount() {\n    const canvas = this.canvasRef.current;\n    this._context = canvas.getContext('2d');\n\n    const mouseMove = (e) => {\n      let x, y;\n      if ('touches' in e) {\n        if (e.touches.length > 1) {\n          return true;\n        } else {\n          const rect = e.target.getBoundingClientRect();\n          x = e.targetTouches[0].clientX - rect.left;\n          y = e.targetTouches[0].clientY - rect.top;\n        }\n      } else {\n        x = e.offsetX;\n        y = e.offsetY;\n      }\n      x = Math.trunc(x / e.target.clientWidth * BoardWidth);\n      y = Math.trunc(y / e.target.clientHeight * BoardWidth);\n      let cell = null;\n      if (x >= 0 && x < BoardWidth && y >= 0 && y < BoardHeight) {\n        cell = { x, y };\n      }\n      if (JSON.stringify(cell) !== JSON.stringify(this.state.selectedCell)) {\n        this.setState({\n          selectedCell: cell,\n          selectedOwnerIndex: this._lines && cell && this._lines[cell.y] && this._lines[cell.y][cell.x].ownerIndex\n        }, async () => {\n          this.renderCanvas()\n          if (this.state.selectedCell !== null && this._buttonDown) {\n            if (this.state.pickingColor) {\n              this.pickColor(this.state.selectedCell);\n            } else {\n              this.saveColor();\n              await this.drawPixel(this.state.selectedCell);\n            }\n          }\n        })\n      }\n      e.preventDefault();\n      return false;\n    };\n\n    canvas.addEventListener('mousemove', mouseMove);\n    canvas.addEventListener('touchmove', mouseMove);\n\n    const mouseDown = async (e) => {\n      this._buttonDown = true;\n      if (this.state.selectedCell !== null) {\n        if (this.state.pickingColor) {\n          this.pickColor(this.state.selectedCell);\n        } else {\n          this.saveColor();\n          await this.drawPixel(this.state.selectedCell);\n        }\n      }\n    };\n\n    canvas.addEventListener('mousedown', mouseDown);\n    canvas.addEventListener('touchstart', mouseDown);\n\n    const unselectCell = () => {\n      this.setState({\n        selectedCell: null,\n      }, () => this.renderCanvas());\n    }\n\n    const mouseUp = async (e) => {\n      this._buttonDown = false;\n      if ('touches' in e) {\n        unselectCell();\n      }\n    }\n\n    canvas.addEventListener('mouseup', mouseUp);\n    canvas.addEventListener('touchend', mouseUp);\n\n    canvas.addEventListener('mouseleave', unselectCell);\n\n    canvas.addEventListener('mouseenter', (e) => {\n      if (this._buttonDown) {\n        if (!('touches' in e) && !(e.buttons & 1)) {\n          this._buttonDown = false;\n        }\n      }\n    });\n\n    document.addEventListener('keydown', (e) => {\n      e.altKey && this.enablePickColor()\n    })\n\n    document.addEventListener('keyup', (e) => {\n      !e.altKey && this.disablePickColor()\n    })\n  }\n\n  enablePickColor() {\n    this.setState({\n      pickingColor: true,\n    }, () => {\n      this.renderCanvas()\n    });\n  }\n\n  disablePickColor() {\n    this.setState({\n      pickingColor: false,\n    }, () => {\n      this.renderCanvas()\n    });\n  }\n\n  pickColor(cell) {\n    if (!this.state.signedIn || !this._lines || !this._lines[cell.y]) {\n      return;\n    }\n    const color = this._lines[cell.y][cell.x].color;\n\n    console.log(int2hsv(color))\n\n    this.setState({\n      currentColor: color,\n      pickerColor: intToColor(color),\n      gammaColors: generateGamma(int2hsv(color)[0]),\n      pickingColor: false,\n    }, () => {\n      this.renderCanvas()\n    });\n  }\n\n  async _sendQueue() {\n    const pixels = this._queue.slice(0, BatchOfPixels);\n    this._queue = this._queue.slice(BatchOfPixels);\n    this._pendingPixels = pixels;\n\n    try {\n      await this._contract.draw({\n        pixels\n      }, new BN(\"75000000000000\"));\n      this._numFailedTxs = 0;\n    } catch (error) {\n      console.log(\"Failed to send a transaction\", error);\n      this._numFailedTxs += 1;\n      if (this._numFailedTxs < 3) {\n        this._queue = this._queue.concat(this._pendingPixels);\n        this._pendingPixels = [];\n      } else {\n        this._pendingPixels = [];\n        this._queue = [];\n      }\n    }\n    try {\n      await Promise.all([this.refreshBoard(true), this.refreshAccountStats()]);\n    } catch (e) {\n      // ignore\n    }\n    this._pendingPixels.forEach((p) => {\n      if (this._pending[p.y][p.x] === p.color)\n      {\n       this._pending[p.y][p.x] = -1;\n      }\n    });\n    this._pendingPixels = [];\n  }\n\n  async _pingQueue(ready) {\n    if (this._sendQueueTimer) {\n      clearTimeout(this._sendQueueTimer);\n      this._sendQueueTimer = null;\n    }\n\n    if (this._pendingPixels.length === 0 && (this._queue.length >= BatchOfPixels || ready)) {\n      await this._sendQueue();\n    }\n    if (this._queue.length > 0) {\n      this._sendQueueTimer = setTimeout(async () => {\n        await this._pingQueue(true);\n      }, BatchTimeout);\n    }\n\n  }\n\n  async drawPixel(cell) {\n    if (!this.state.signedIn || !this._lines || !this._lines[cell.y]) {\n      return;\n    }\n    const balance = this.state.account ? this.state.account.avocadoBalance : 0;\n    if (balance - this.state.pendingPixels < 1) {\n      return;\n    }\n\n    if (this._pending[cell.y][cell.x] !== this.state.currentColor && this._lines[cell.y][cell.x].color !== this.state.currentColor) {\n      this._pending[cell.y][cell.x] = this.state.currentColor;\n    } else {\n      return;\n    }\n\n    this._queue.push({\n      x: cell.x,\n      y: cell.y,\n      color: this.state.currentColor,\n    });\n\n    this._stopRefreshTime = new Date().getTime() + MaxWorkTime;\n    await this._pingQueue(false);\n  }\n\n  parseAccount(account, accountId) {\n    if (!account) {\n      account = {\n        accountId,\n        accountIndex: -1,\n        avocadoBalance: 25.0,\n        bananaBalance: 0.0,\n        numPixels: 0,\n        farmingPreference: Berry.Avocado,\n      }\n    } else {\n      account = {\n        accountId: account.account_id,\n        accountIndex: account.account_index,\n        avocadoBalance: parseFloat(account.avocado_balance) / this._pixelCost,\n        bananaBalance: parseFloat(account.banana_balance) / this._pixelCost,\n        numPixels: account.num_pixels,\n        farmingPreference: account.farming_preference,\n      }\n    }\n    account.startTime = new Date().getTime();\n    account.avocadoPixels = (account.farmingPreference === Berry.Avocado) ? (account.numPixels + 1) : 0;\n    account.bananaPixels = (account.farmingPreference === Berry.Banana) ? (account.numPixels) : 0;\n    account.avocadoRewardPerMs = account.avocadoPixels / (24 * 60 * 60 * 1000);\n    account.bananaRewardPerMs = account.bananaPixels / (24 * 60 * 60 * 1000);\n    return account;\n  }\n\n  async getAccount(accountId) {\n    return this.parseAccount(\n      await this._contract.get_account({account_id: accountId}),\n      accountId\n    );\n  }\n\n  async getAccountByIndex(accountIndex) {\n    return this.parseAccount(\n      await this._contract.get_account_by_index({account_index: accountIndex}),\n      \"unknown\",\n    );\n  }\n\n  async refreshAccountStats() {\n    let account = await this.getAccount(this._accountId);\n    if (this._balanceRefreshTimer) {\n      clearInterval(this._balanceRefreshTimer);\n      this._balanceRefreshTimer = null;\n    }\n\n    this.setState({\n      pendingPixels: this._pendingPixels.length + this._queue.length,\n      farmingBanana: account.farmingPreference === Berry.Banana,\n      account,\n    });\n\n    this._balanceRefreshTimer = setInterval(() => {\n      const t = new Date().getTime() - account.startTime;\n      this.setState({\n        account: Object.assign({}, account, {\n          avocadoBalance: account.avocadoBalance + t * account.avocadoRewardPerMs,\n          bananaBalance: account.bananaBalance + t * account.bananaRewardPerMs,\n        }),\n        pendingPixels: this._pendingPixels.length + this._queue.length,\n      });\n    }, 100);\n  }\n\n  async _initNear() {\n    const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n    const near = await nearAPI.connect(Object.assign({ deps: { keyStore } }, NearConfig));\n    this._keyStore = keyStore;\n    this._near = near;\n\n    this._walletConnection = new nearAPI.WalletConnection(near, NearConfig.contractName);\n    this._accountId = this._walletConnection.getAccountId();\n\n    this._account = this._walletConnection.account();\n    this._contract = new nearAPI.Contract(this._account, NearConfig.contractName, {\n      viewMethods: ['get_account', 'get_account_by_index', 'get_lines', 'get_line_versions', 'get_pixel_cost', 'get_account_balance', 'get_account_num_pixels', 'get_account_id_by_index'],\n      changeMethods: ['draw', 'buy_tokens', 'select_farming_preference'],\n    });\n    this._pixelCost = parseFloat(await this._contract.get_pixel_cost());\n    if (this._accountId) {\n      await this.refreshAccountStats();\n    }\n    this._lineVersions = Array(BoardHeight).fill(-1);\n    this._lines = Array(BoardHeight).fill(false);\n    this._pending = Array(BoardHeight).fill(false);\n    this._pending.forEach((v, i, a) => a[i] = Array(BoardWidth).fill(-1));\n    await this.refreshBoard(true);\n  }\n\n  async refreshBoard(forced) {\n    if (this._refreshBoardTimer) {\n      clearTimeout(this._refreshBoardTimer);\n      this._refreshBoardTimer = null;\n    }\n    const t = new Date().getTime();\n    if (t < this._stopRefreshTime) {\n      this._refreshBoardTimer = setTimeout(async () => {\n        await this.refreshBoard(false);\n      }, RefreshBoardTimeout);\n    }\n\n    if (!forced && document.hidden) {\n      return;\n    }\n\n    let lineVersions = await this._contract.get_line_versions();\n    let needLines = [];\n    for (let i = 0; i < BoardHeight; ++i) {\n      if (lineVersions[i] !== this._lineVersions[i]) {\n        needLines.push(i);\n      }\n    }\n    let requestLines = []\n    for (let i = 0; i < needLines.length; i += NumLinesPerFetch) {\n      requestLines.push(needLines.slice(i, i + NumLinesPerFetch));\n    }\n\n    let results = await Promise.all(requestLines.map(lines => this._contract.get_lines({lines})));\n    results = results.flat();\n    requestLines = requestLines.flat();\n    for (let i = 0; i < requestLines.length; ++i) {\n      let lineIndex = requestLines[i];\n      let line = decodeLine(results[i]);\n      this._lines[lineIndex] = line;\n    }\n\n    this._lineVersions = lineVersions;\n    this._refreshOwners();\n    this.renderCanvas();\n  }\n\n  _refreshOwners() {\n    const counts = {};\n    this._lines.flat().forEach((cell) => {\n      counts[cell.ownerIndex] = (counts[cell.ownerIndex] || 0) + 1;\n    })\n    delete counts[0];\n    const sortedKeys = Object.keys(counts).sort((a, b) => counts[b] - counts[a]);\n    this.setState({\n      owners: sortedKeys.map((accountIndex) => {\n        accountIndex = parseInt(accountIndex);\n        return {\n          accountIndex,\n          numPixels: counts[accountIndex],\n        }\n      })\n    })\n    sortedKeys.forEach(async (accountIndex) => {\n      accountIndex = parseInt(accountIndex);\n      if (!(accountIndex in this._accounts) || counts[accountIndex] !== (this._oldCounts[accountIndex] || 0)) {\n        try {\n          this._accounts[accountIndex] = await this.getAccountByIndex(accountIndex);\n        } catch (err) {\n          console.log(\"Failed to fetch account index #\", accountIndex, err)\n        }\n        this.setState({\n          accounts: Object.assign({}, this._accounts),\n        })\n      }\n    })\n    this.setState({\n      accounts: Object.assign({}, this._accounts),\n    })\n    this._oldCounts = counts;\n  }\n\n  renderCanvas() {\n    if (!this._context || !this._lines) {\n      return;\n    }\n\n    const ctx = this._context;\n\n    for (let i = 0; i < BoardHeight; ++i) {\n      const line = this._lines[i];\n      if (!line) {\n        continue;\n      }\n      for (let j = 0; j < BoardWidth; ++j) {\n        const p = line[j];\n        ctx.fillStyle = intToColor(p.color);\n        ctx.fillRect(j * CellWidth, i * CellHeight, CellWidth, CellHeight);\n        if (this.state.highlightedAccountIndex >= 0) {\n          if (p.ownerIndex !== this.state.highlightedAccountIndex) {\n            ctx.fillStyle = 'rgba(32, 32, 32, 0.8)';\n            ctx.fillRect(j * CellWidth, i * CellHeight, CellWidth / 2, CellHeight / 2);\n            ctx.fillRect((j + 0.5) * CellWidth, (i + 0.5) * CellHeight, CellWidth/ 2, CellHeight/ 2);\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n            ctx.fillRect(j * CellWidth, (i + 0.5) * CellHeight, CellWidth / 2, CellHeight / 2);\n            ctx.fillRect((j + 0.5) * CellWidth, i * CellHeight, CellWidth/ 2, CellHeight/ 2);\n          } else {\n            ctx.beginPath();\n            ctx.strokeStyle = ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n            ctx.lineWidth = 0.5;\n            ctx.rect(j * CellWidth + 0.5, i * CellHeight + 0.5, CellWidth - 1, CellHeight - 1);\n            ctx.stroke();\n            ctx.closePath();\n          }\n        }\n      }\n    }\n\n    this._pendingPixels.concat(this._queue).forEach((p) => {\n      ctx.fillStyle = intToColor(p.color);\n      ctx.fillRect(p.x * CellWidth, p.y * CellHeight, CellWidth, CellHeight);\n    })\n\n    if (this.state.selectedCell) {\n      const c = this.state.selectedCell;\n      if (this.state.pickingColor) {\n        const color = this._lines[c.y] ? this._lines[c.y][c.x].color : 0;\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = transparentColor(color, 0.5);\n        ctx.lineWidth = CellWidth * 4;\n        ctx.arc((c.x + 0.5) * CellWidth, (c.y + 0.5) * CellHeight, CellWidth * 4, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.closePath();\n\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = transparentColor(color, 1);\n        ctx.lineWidth = CellWidth * 2;\n        ctx.arc((c.x + 0.5) * CellWidth, (c.y + 0.5) * CellHeight, CellWidth * 4, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.closePath();\n      } else {\n        ctx.fillStyle = transparentColor(this.state.currentColor, 0.2);\n        ctx.fillRect(c.x * CellWidth, 0, CellWidth, c.y * CellHeight);\n        ctx.fillRect(c.x * CellWidth, (c.y+ 1) * CellHeight, CellWidth, (BoardHeight - c.y - 1) * CellHeight);\n        ctx.fillRect(0, c.y * CellHeight, c.x * CellWidth, CellHeight);\n        ctx.fillRect( (c.x + 1) * CellWidth, c.y * CellHeight, (BoardWidth - c.x - 1) * CellWidth, CellHeight);\n\n        ctx.beginPath();\n        ctx.lineWidth = 3;\n        ctx.fillStyle = intToColor(this.state.currentColor);\n        ctx.strokeStyle = intToColor(this.state.currentColor);\n        ctx.rect(c.x * CellWidth, c.y * CellHeight, CellWidth, CellHeight);\n        ctx.stroke();\n        ctx.closePath();\n      }\n    }\n\n    if (!this.state.boardLoaded) {\n      this.setState({\n        boardLoaded: true\n      })\n    }\n  }\n\n  async requestSignIn() {\n    const appTitle = 'Berry Club';\n    await this._walletConnection.requestSignIn(\n        NearConfig.contractName,\n        appTitle\n    )\n  }\n\n  async logOut() {\n    this._walletConnection.signOut();\n    this._accountId = null;\n    this.setState({\n      signedIn: !!this._accountId,\n      accountId: this._accountId,\n    })\n  }\n\n  hueColorChange(c) {\n    console.log(c)\n    this.setState({\n      gammaColors: generateGamma(c.hsl.h)\n    })\n    this.changeColor(c)\n  }\n\n  saveColor() {\n    const newColor = intToColor(this.state.currentColor);\n    const index = this.state.colors.indexOf(newColor);\n    if (index >= 0) {\n      this.state.colors.splice(index, 1);\n    }\n    this.setState({\n      colors: [newColor].concat(this.state.colors).slice(0, MaxNumColors)\n    });\n  }\n\n  changeColor(c) {\n    const currentColor = c.rgb.r * 0x010000 + c.rgb.g * 0x000100 + c.rgb.b;\n    this.setState({\n      pickerColor: c,\n      currentColor,\n    }, () => {\n      this.renderCanvas();\n    })\n  }\n\n  async buyTokens(amount) {\n    const requiredBalance = PixelPrice.muln(amount);\n    await this._contract.buy_tokens({}, new BN(\"30000000000000\"), requiredBalance);\n  }\n\n  setHover(accountIndex, v) {\n    if (v) {\n      this.setState({\n        highlightedAccountIndex: accountIndex,\n      }, () => {\n        this.renderCanvas();\n      })\n    } else if (this.state.highlightedAccountIndex === accountIndex) {\n      this.setState({\n        highlightedAccountIndex: -1,\n      }, () => {\n        this.renderCanvas();\n      })\n    }\n  }\n\n  async switchBerry(farmingBanana) {\n    this.setState({\n      farmingBanana,\n    })\n    await this._contract.select_farming_preference({\n      berry: farmingBanana ? Berry.Banana : Berry.Avocado,\n    });\n    await this.refreshAccountStats();\n  }\n\n  render() {\n\n    const content = !this.state.connected ? (\n        <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n    ) : (this.state.signedIn ? (\n        <div>\n          <div className=\"float-right\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              onClick={() => this.logOut()}>Log out ({this.state.accountId})</button>\n          </div>\n          <div className=\"your-balance\">\n            Balance: <Balance\n              account={this.state.account}\n              pendingPixels={this.state.pendingPixels}\n              detailed={true}\n          />\n          <div>\n            Farming preference:\n            <Switch\n                onChange={(e) => this.switchBerry(e)}\n                checked={this.state.farmingBanana}\n                className=\"react-switch\"\n                height={30}\n                width={70}\n                offColor=\"#666\"\n                onColor=\"#666\"\n                uncheckedIcon={<div className=\"switch-berry avocado\">{Avocado}</div>}\n                checkedIcon={<div className=\"switch-berry banana\">{Banana}</div>}\n            />\n          </div>\n          </div>\n          <div className=\"buttons\">\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => this.buyTokens(10)}>Buy <span className=\"font-weight-bold\">25{Avocado}</span> for <span className=\"font-weight-bold\">Ⓝ0.1</span></button>{' '}\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => this.buyTokens(40)}>Buy <span className=\"font-weight-bold\">100{Avocado}</span> for <span className=\"font-weight-bold\">Ⓝ0.4</span></button>{' '}\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => this.buyTokens(100)}>Buy <span className=\"font-weight-bold\">250{Avocado}</span> for <span className=\"font-weight-bold\">Ⓝ1</span></button>{' '}\n            <button\n              className=\"btn btn-success\"\n              onClick={() => this.buyTokens(500)}>DEAL: Buy <span className=\"font-weight-bold\">1500{Avocado}</span> for <span className=\"font-weight-bold\">Ⓝ5</span></button>\n          </div>\n          <div className=\"color-picker\">\n            <HuePicker color={ this.state.pickerColor } width=\"100%\" disableAlpha={true} onChange={(c) => this.hueColorChange(c)}/>\n            <GithubPicker className=\"circle-picker\" colors={this.state.gammaColors} color={ this.state.pickerColor } triangle='hide' width=\"100%\" onChangeComplete={(c) => this.changeColor(c)}/>\n            <GithubPicker className=\"circle-picker\" colors={this.state.colors} color={ this.state.pickerColor } triangle='hide' width=\"100%\" onChangeComplete={(c) => this.hueColorChange(c)}/>\n          </div>\n        </div>\n    ) : (\n        <div style={{marginBottom: \"10px\"}}>\n          <button\n              className=\"btn btn-primary\"\n              onClick={() => this.requestSignIn()}>Log in with NEAR Wallet</button>\n        </div>\n    ));\n    return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div>\n              <h2>{Avocado} Berry Club {Banana}</h2>{' '}\n              <a\n                className=\"btn btn-outline-none\"\n                href=\"https://farm.berryclub.io\">Berry Farm {Cucumber}\n              </a>\n              {content}\n              <div>\n                {this.state.signedIn ? (<div>\n                  Draw here - one {Avocado} per pixel. Hold <span className=\"badge badge-secondary\">ALT</span> key to pick a color from board.{' '}\n                  <button\n                    className=\"btn btn-outline-secondary\"\n                    onClick={() => this.state.pickingColor ? this.disablePickColor() : this.enablePickColor() }>{ this.state.pickingColor ? 'Cancel' : 'Color Picker'}\n                  </button>\n                </div>) : \"\"}\n                <canvas ref={this.canvasRef}\n                        width={800}\n                        height={800}\n                        className={this.state.boardLoaded ? \"pixel-board\" : \"pixel-board c-animated-background\"}>\n\n                </canvas>\n              </div>\n              <div>\n                <div className=\"call-to-action\">\n                  <a\n                    className=\"btn\"\n                    href=\"https://farm.berryclub.io\">Berry Farm {Cucumber}\n                  </a> is now open!\n                </div>\n              </div>\n            </div>\n            <div className=\"leaderboard\">\n              <h2>Leaderboard</h2>\n              <div>\n                <Leaderboard\n                  owners={this.state.owners}\n                  accounts={this.state.accounts}\n                  setHover={(accountIndex, v) => this.setHover(accountIndex, v)}\n                  selectedOwnerIndex={this.state.selectedOwnerIndex}\n                  highlightedAccountIndex={this.state.highlightedAccountIndex}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nconst Balance = (props) => {\n  const account = props.account;\n  if (!account) {\n    return \"\";\n  }\n  const fraction = props.detailed ? 3: 1;\n  const avacadoBalance = account.avocadoBalance - (props.pendingPixels || 0);\n  const avocadoFarm = (account.avocadoPixels > 0) ? (\n    <span>\n      {'(+'}<span className=\"font-weight-bold\">{account.avocadoPixels}</span>{Avocado}{'/day)'}\n    </span>\n  ) : \"\";\n  const bananaFarm = (account.bananaPixels > 0) ? (\n    <span>\n      {'(+'}<span className=\"font-weight-bold\">{account.bananaPixels}</span>{Banana}{'/day)'}\n    </span>\n  ) : \"\";\n  return (\n    <span className=\"balances font-small\">\n      <span className=\"font-weight-bold\">{avacadoBalance.toFixed(fraction)}</span>{Avocado}{' '}\n      <span className=\"font-weight-bold\">{account.bananaBalance.toFixed(fraction)}</span>{Banana}{' '}\n      {avocadoFarm}\n      {bananaFarm}\n      {\n        props.pendingPixels ? <span> ({props.pendingPixels} pending)</span> : \"\"\n      }\n    </span>\n  );\n};\n\nconst Leaderboard = (props) => {\n  const owners = props.owners.map((owner) => {\n    if (owner.accountIndex in props.accounts) {\n      owner.account = props.accounts[owner.accountIndex];\n    }\n    return <Owner\n      key={owner.accountIndex}\n      {...owner}\n      isSelected={owner.accountIndex === props.selectedOwnerIndex}\n      setHover={(v) => props.setHover(owner.accountIndex, v)}\n      isHighlighted={owner.accountIndex === props.highlightedAccountIndex}\n    />\n  })\n  return (\n    <table className=\"table table-hover table-sm\"><tbody>{owners}</tbody></table>\n  );\n};\n\nconst Owner = (props) => {\n  const account = props.account;\n  return (\n    <tr onMouseEnter={() => props.setHover(true)}\n        onMouseLeave={() => props.setHover(false)}\n        className={props.isSelected ? \"selected\" : \"\"}>\n      <td>\n        {account ? <Account accountId={account.accountId} /> : \"...\"}\n      </td>\n      <td className=\"text-nowrap\">\n        <small>\n          <Balance account={account} />\n        </small>\n      </td>\n    </tr>\n  )\n}\n\nconst Account = (props) => {\n  const accountId = props.accountId;\n  const shortAccountId = (accountId.length > 6 + 6 + 3) ?\n    (accountId.slice(0, 6) + '...' + accountId.slice(-6)) :\n    accountId;\n  return <a className=\"account\"\n            href={`https://wayback.berryclub.io/${accountId}`}>{shortAccountId}</a>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}