{"version":3,"sources":["App.js","index.js"],"names":["PixelPrice","BN","NearConfig","networkId","nodeUrl","contractName","walletUrl","Avacado","role","aria-label","intToColor","c","toString","padStart","int2hsv","cInt","substr","r","parseInt","g","b","v","Math","max","min","h","transparentColor","a","generateGamma","hue","gammaColors","i","push","decodeLine","line","buf","Buffer","from","length","Error","pixels","color","readUInt32LE","ownerIndex","App","props","colors","map","toLowerCase","currentColor","floor","random","substring","state","connected","signedIn","accountId","balance","numPixels","pendingPixels","boardLoaded","selectedCell","pickerColor","pickingColor","owners","accounts","highlightedAccountIndex","_buttonDown","_oldCounts","_numFailedTxs","_balanceRefreshTimer","canvasRef","React","createRef","_context","_lines","_queue","_pendingPixels","_refreshBoardTimer","_sendQueueTimer","_stopRefreshTime","Date","getTime","_accounts","_initNear","then","setState","_accountId","canvas","this","current","getContext","mouseMove","e","x","y","touches","rect","target","getBoundingClientRect","targetTouches","clientX","left","clientY","top","offsetX","offsetY","trunc","clientWidth","clientHeight","cell","JSON","stringify","renderCanvas","pickColor","saveColor","drawPixel","preventDefault","addEventListener","mouseDown","unselectCell","mouseUp","document","altKey","enablePickColor","disablePickColor","console","log","slice","_contract","draw","concat","Promise","all","refreshBoard","refreshAccountStats","forEach","p","_pending","ready","clearTimeout","_sendQueue","setTimeout","_pingQueue","parseFloat","get_account_balance","account_id","get_account_num_pixels","clearInterval","startTime","rewardPerMs","_pixelCost","setInterval","t","keyStore","nearAPI","BrowserLocalStorageKeyStore","Object","assign","deps","near","_keyStore","_near","_walletConnection","getAccountId","_account","account","viewMethods","changeMethods","get_pixel_cost","_lineVersions","Array","fill","forced","hidden","get_line_versions","lineVersions","needLines","requestLines","lines","get_lines","results","flat","lineIndex","_refreshOwners","counts","sortedKeys","keys","sort","accountIndex","get_account_id_by_index","account_index","accountBalance","ctx","j","fillStyle","fillRect","beginPath","strokeStyle","lineWidth","CellWidth","arc","PI","stroke","closePath","requestSignIn","signOut","hsl","changeColor","newColor","index","indexOf","splice","rgb","amount","requiredBalance","muln","buy_tokens","content","className","onClick","logOut","Balance","buyTokens","width","disableAlpha","onChange","hueColorChange","triangle","onChangeComplete","style","marginBottom","aria-hidden","ref","height","Leaderboard","setHover","Component","toFixed","owner","Owner","key","isHighlighted","onMouseEnter","onMouseLeave","Account","shortAccountId","href","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cf686236.chunk.js","sourcesContent":["import \"./App.scss\";\nimport React from 'react';\nimport BN from 'bn.js';\nimport * as nearAPI from 'near-api-js'\nimport { HuePicker, GithubPicker } from 'react-color'\n\nconst PixelPrice = new BN(\"10000000000000000000000\");\nconst IsMainnet = false;\nconst TestNearConfig = {\n  networkId: 'testnet',\n  nodeUrl: 'https://rpc.testnet.near.org',\n  contractName: 'dev-1604708520705-2360364',\n  walletUrl: 'https://wallet.testnet.near.org',\n};\nconst MainNearConfig = {\n  networkId: 'mainnet',\n  nodeUrl: 'https://rpc.mainnet.near.org',\n  contractName: 'berryclub.ek.near',\n  walletUrl: 'https://wallet.near.org',\n};\nconst NearConfig = IsMainnet ? MainNearConfig : TestNearConfig;\n\nconst Avacado = <span role=\"img\" aria-label=\"avacado\">🥑</span>;\n\nconst BoardHeight = 50;\nconst BoardWidth = 50;\nconst NumLinesPerFetch = 10;\nconst ExpectedLineLength = 4 + 8 * BoardWidth;\nconst CellWidth = 16;\nconst CellHeight = 16;\nconst MaxNumColors = 31;\nconst BatchOfPixels = 30;\n// 500 ms\nconst BatchTimeout = 500;\nconst RefreshBoardTimeout = 1000;\nconst MaxWorkTime = 10 * 60 * 1000;\n\nconst intToColor = (c) => `#${c.toString(16).padStart(6, '0')}`;\nconst int2hsv = (cInt) => {\n  cInt = intToColor(cInt).substr(1)\n  const r = parseInt(cInt.substr(0, 2), 16) / 255\n  const g = parseInt(cInt.substr(2, 2), 16) / 255\n  const b = parseInt(cInt.substr(4, 2), 16) / 255\n  let v=Math.max(r,g,b), c=v-Math.min(r,g,b);\n  let h= c && ((v===r) ? (g-b)/c : ((v===g) ? 2+(b-r)/c : 4+(r-g)/c));\n  return [60*(h<0?h+6:h), v&&c/v, v];\n}\nconst transparentColor = (c, a) => `rgba(${(c >> 16) / 1}, ${((c >> 8) & 0xff) / 1}, ${(c & 0xff) / 1}, ${a})`\nconst generateGamma = (hue) => {\n  const gammaColors = [];\n  for (let i = 0; i < MaxNumColors; ++i) {\n    gammaColors.push(`hsl(${hue}, 100%, ${100 * i / (MaxNumColors - 1)}%)`);\n  }\n  return gammaColors;\n};\nconst decodeLine = (line) => {\n  let buf = Buffer.from(line, 'base64');\n  if (buf.length !== ExpectedLineLength) {\n    throw new Error(\"Unexpected encoded line length\");\n  }\n  let pixels = []\n  for (let i = 4; i < buf.length; i += 8) {\n    let color = buf.readUInt32LE(i);\n    let ownerIndex = buf.readUInt32LE(i + 4);\n    pixels.push({\n      color,\n      ownerIndex,\n    })\n  }\n  return pixels;\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const colors = [\"#000000\", \"#666666\", \"#aaaaaa\", \"#FFFFFF\", \"#F44E3B\", \"#D33115\", \"#9F0500\", \"#FE9200\", \"#E27300\", \"#C45100\", \"#FCDC00\", \"#FCC400\", \"#FB9E00\", \"#DBDF00\", \"#B0BC00\", \"#808900\", \"#A4DD00\", \"#68BC00\", \"#194D33\", \"#68CCCA\", \"#16A5A5\", \"#0C797D\", \"#73D8FF\", \"#009CE0\", \"#0062B1\", \"#AEA1FF\", \"#7B64FF\", \"#653294\", \"#FDA1FF\", \"#FA28FF\", \"#AB149E\"].map((c) => c.toLowerCase());\n    const currentColor = parseInt(colors[Math.floor(Math.random() * colors.length)].substring(1), 16);\n\n    this.state = {\n      connected: false,\n      signedIn: false,\n      accountId: null,\n      balance: 0.0,\n      numPixels: 0,\n      pendingPixels: 0,\n      boardLoaded: false,\n      selectedCell: null,\n      currentColor,\n      pickerColor: intToColor(currentColor),\n      colors,\n      gammaColors: generateGamma(0),\n      pickingColor: false,\n      owners: [],\n      accounts: {},\n      highlightedAccountIndex: -1,\n    };\n\n    this._buttonDown = false;\n    this._oldCounts = {};\n    this._numFailedTxs = 0;\n    this._balanceRefreshTimer = null;\n    this.canvasRef = React.createRef();\n    this._context = false;\n    this._lines = false;\n    this._queue = [];\n    this._pendingPixels = [];\n    this._refreshBoardTimer = null;\n    this._sendQueueTimer = null;\n    this._stopRefreshTime = new Date().getTime() + MaxWorkTime;\n    this._accounts = {};\n\n    this._initNear().then(() => {\n      this.setState({\n        connected: true,\n        signedIn: !!this._accountId,\n        accountId: this._accountId,\n      });\n    });\n  }\n\n  componentDidMount() {\n    const canvas = this.canvasRef.current;\n    this._context = canvas.getContext('2d');\n\n    const mouseMove = (e) => {\n      let x, y;\n      if ('touches' in e) {\n        if (e.touches.length > 1) {\n          return true;\n        } else {\n          const rect = e.target.getBoundingClientRect();\n          x = e.targetTouches[0].clientX - rect.left;\n          y = e.targetTouches[0].clientY - rect.top;\n        }\n      } else {\n        x = e.offsetX;\n        y = e.offsetY;\n      }\n      x = Math.trunc(x / e.target.clientWidth * BoardWidth);\n      y = Math.trunc(y / e.target.clientHeight * BoardWidth);\n      let cell = null;\n      if (x >= 0 && x < BoardWidth && y >= 0 && y < BoardHeight) {\n        cell = { x, y };\n      }\n      if (JSON.stringify(cell) !== JSON.stringify(this.state.selectedCell)) {\n        this.setState({\n          selectedCell: cell,\n        }, async () => {\n          this.renderCanvas()\n          if (this.state.selectedCell !== null && this._buttonDown) {\n            if (this.state.pickingColor) {\n              this.pickColor(this.state.selectedCell);\n            } else {\n              this.saveColor();\n              await this.drawPixel(this.state.selectedCell);\n            }\n          }\n        })\n      }\n      e.preventDefault();\n      return false;\n    };\n\n    canvas.addEventListener('mousemove', mouseMove);\n    canvas.addEventListener('touchmove', mouseMove);\n\n    const mouseDown = async (e) => {\n      this._buttonDown = true;\n      if (this.state.selectedCell !== null) {\n        if (this.state.pickingColor) {\n          this.pickColor(this.state.selectedCell);\n        } else {\n          this.saveColor();\n          await this.drawPixel(this.state.selectedCell);\n        }\n      }\n    };\n\n    canvas.addEventListener('mousedown', mouseDown);\n    canvas.addEventListener('touchstart', mouseDown);\n\n    const unselectCell = () => {\n      this.setState({\n        selectedCell: null,\n      }, () => this.renderCanvas());\n    }\n\n    const mouseUp = async (e) => {\n      this._buttonDown = false;\n      if ('touches' in e) {\n        unselectCell();\n      }\n    }\n\n    canvas.addEventListener('mouseup', mouseUp);\n    canvas.addEventListener('touchend', mouseUp);\n\n    canvas.addEventListener('mouseleave', unselectCell);\n\n    document.addEventListener('keydown', (e) => {\n      e.altKey && this.enablePickColor()\n    })\n\n    document.addEventListener('keyup', (e) => {\n      !e.altKey && this.disablePickColor()\n    })\n  }\n\n  enablePickColor() {\n    this.setState({\n      pickingColor: true,\n    }, () => {\n      this.renderCanvas()\n    });\n  }\n\n  disablePickColor() {\n    this.setState({\n      pickingColor: false,\n    }, () => {\n      this.renderCanvas()\n    });\n  }\n\n  pickColor(cell) {\n    if (!this.state.signedIn || !this._lines || !this._lines[cell.y]) {\n      return;\n    }\n    const color = this._lines[cell.y][cell.x].color;\n\n    console.log(int2hsv(color))\n\n    this.setState({\n      currentColor: color,\n      pickerColor: intToColor(color),\n      gammaColors: generateGamma(int2hsv(color)[0]),\n      pickingColor: false,\n    }, () => {\n      this.renderCanvas()\n    });\n  }\n\n  async _sendQueue() {\n    const pixels = this._queue.slice(0, BatchOfPixels);\n    this._queue = this._queue.slice(BatchOfPixels);\n    this._pendingPixels = pixels;\n\n    try {\n      await this._contract.draw({\n        pixels\n      }, new BN(\"75000000000000\"));\n      this._numFailedTxs = 0;\n    } catch (error) {\n      console.log(\"Failed to send a transaction\", error);\n      this._numFailedTxs += 1;\n      if (this._numFailedTxs < 3) {\n        this._queue = this._queue.concat(this._pendingPixels);\n        this._pendingPixels = [];\n      } else {\n        this._pendingPixels = [];\n        this._queue = [];\n      }\n    }\n    try {\n      await Promise.all([this.refreshBoard(true), this.refreshAccountStats()]);\n    } catch (e) {\n      // ignore\n    }\n    this._pendingPixels.forEach((p) => {\n      if (this._pending[p.y][p.x] === p.color)\n      {\n       this._pending[p.y][p.x] = -1;\n      }\n    });\n    this._pendingPixels = [];\n  }\n\n  async _pingQueue(ready) {\n    if (this._sendQueueTimer) {\n      clearTimeout(this._sendQueueTimer);\n      this._sendQueueTimer = null;\n    }\n\n    if (this._pendingPixels.length === 0 && (this._queue.length >= BatchOfPixels || ready)) {\n      await this._sendQueue();\n    }\n    if (this._queue.length > 0) {\n      this._sendQueueTimer = setTimeout(async () => {\n        await this._pingQueue(true);\n      }, BatchTimeout);\n    }\n\n  }\n\n  async drawPixel(cell) {\n    if (!this.state.signedIn || !this._lines || !this._lines[cell.y]) {\n      return;\n    }\n    if (this.state.balance - this.state.pendingPixels < 1) {\n      return;\n    }\n\n    if (this._pending[cell.y][cell.x] !== this.state.currentColor && this._lines[cell.y][cell.x].color !== this.state.currentColor) {\n      this._pending[cell.y][cell.x] = this.state.currentColor;\n    } else {\n      return;\n    }\n\n    this._queue.push({\n      x: cell.x,\n      y: cell.y,\n      color: this.state.currentColor,\n    });\n\n    this._stopRefreshTime = new Date().getTime() + MaxWorkTime;\n    await this._pingQueue(false);\n  }\n\n  async refreshAccountStats() {\n    let balance = parseFloat(await this._contract.get_account_balance({account_id: this._accountId}));\n    let numPixels = await this._contract.get_account_num_pixels({account_id: this._accountId})\n    if (this._balanceRefreshTimer) {\n      clearInterval(this._balanceRefreshTimer);\n      this._balanceRefreshTimer = null;\n    }\n    const startTime = new Date().getTime();\n    const rewardPerMs = (numPixels + 1) * this._pixelCost / (24 * 60 * 60 * 1000);\n\n    this.setState({\n      balance: balance / this._pixelCost,\n      pendingPixels: this._queue.length,\n      numPixels,\n    });\n\n    this._balanceRefreshTimer = setInterval(() => {\n      const t = new Date().getTime();\n      this.setState({\n        balance: (balance + (t - startTime) * rewardPerMs) / this._pixelCost,\n        pendingPixels: this._pendingPixels.length + this._queue.length,\n      })\n    }, 100);\n  }\n\n  async _initNear() {\n    const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n    const near = await nearAPI.connect(Object.assign({ deps: { keyStore } }, NearConfig));\n    this._keyStore = keyStore;\n    this._near = near;\n\n    this._walletConnection = new nearAPI.WalletConnection(near, NearConfig.contractName);\n    this._accountId = this._walletConnection.getAccountId();\n\n    this._account = this._walletConnection.account();\n    this._contract = new nearAPI.Contract(this._account, NearConfig.contractName, {\n      viewMethods: ['get_lines', 'get_line_versions', 'get_pixel_cost', 'get_account_balance', 'get_account_num_pixels', 'get_account_id_by_index'],\n      changeMethods: ['draw', 'buy_tokens'],\n    });\n    this._pixelCost = parseFloat(await this._contract.get_pixel_cost());\n    if (this._accountId) {\n      await this.refreshAccountStats();\n    }\n    this._lineVersions = Array(BoardHeight).fill(-1);\n    this._lines = Array(BoardHeight).fill(false);\n    this._pending = Array(BoardHeight).fill(false);\n    this._pending.forEach((v, i, a) => a[i] = Array(BoardWidth).fill(-1));\n    await this.refreshBoard(true);\n  }\n\n  async refreshBoard(forced) {\n    if (this._refreshBoardTimer) {\n      clearTimeout(this._refreshBoardTimer);\n      this._refreshBoardTimer = null;\n    }\n    const t = new Date().getTime();\n    if (t < this._stopRefreshTime) {\n      this._refreshBoardTimer = setTimeout(async () => {\n        await this.refreshBoard(false);\n      }, RefreshBoardTimeout);\n    }\n\n    if (!forced && document.hidden) {\n      return;\n    }\n\n    let lineVersions = await this._contract.get_line_versions();\n    let needLines = [];\n    for (let i = 0; i < BoardHeight; ++i) {\n      if (lineVersions[i] !== this._lineVersions[i]) {\n        needLines.push(i);\n      }\n    }\n    let requestLines = []\n    for (let i = 0; i < needLines.length; i += NumLinesPerFetch) {\n      requestLines.push(needLines.slice(i, i + NumLinesPerFetch));\n    }\n\n    let results = await Promise.all(requestLines.map(lines => this._contract.get_lines({lines})));\n    results = results.flat();\n    requestLines = requestLines.flat();\n    for (let i = 0; i < requestLines.length; ++i) {\n      let lineIndex = requestLines[i];\n      let line = decodeLine(results[i]);\n      this._lines[lineIndex] = line;\n    }\n\n    this._lineVersions = lineVersions;\n    this._refreshOwners();\n    this.renderCanvas();\n  }\n\n  _refreshOwners() {\n    const counts = {};\n    this._lines.flat().forEach((cell) => {\n      counts[cell.ownerIndex] = (counts[cell.ownerIndex] || 0) + 1;\n    })\n    delete counts[0];\n    const sortedKeys = Object.keys(counts).sort((a, b) => counts[b] - counts[a]);\n    this.setState({\n      owners: sortedKeys.map((accountIndex) => {\n        accountIndex = parseInt(accountIndex);\n        return {\n          accountIndex,\n          numPixels: counts[accountIndex],\n        }\n      })\n    })\n    sortedKeys.forEach(async (accountIndex) => {\n      accountIndex = parseInt(accountIndex);\n      if (!(accountIndex in this._accounts) || counts[accountIndex] !== (this._oldCounts[accountIndex] || 0)) {\n        try {\n          const accountId = await this._contract.get_account_id_by_index({account_index: accountIndex});\n          const accountBalance = await this._contract.get_account_balance({account_id: accountId});\n          const balance = parseFloat(accountBalance) / this._pixelCost;\n          this._accounts[accountIndex] = {\n            accountIndex,\n            accountId,\n            balance,\n          };\n        } catch (err) {\n          console.log(\"Failed to fetch account index #\", accountIndex, err)\n        }\n        this.setState({\n          accounts: Object.assign({}, this._accounts),\n        })\n      }\n    })\n    this.setState({\n      accounts: Object.assign({}, this._accounts),\n    })\n    this._oldCounts = counts;\n  }\n\n  renderCanvas() {\n    if (!this._context || !this._lines) {\n      return;\n    }\n\n    const ctx = this._context;\n\n    for (let i = 0; i < BoardHeight; ++i) {\n      const line = this._lines[i];\n      if (!line) {\n        continue;\n      }\n      for (let j = 0; j < BoardWidth; ++j) {\n        const p = line[j];\n        if (this.state.highlightedAccountIndex >= 0 && p.ownerIndex !== this.state.highlightedAccountIndex) {\n          ctx.fillStyle = '#000';\n          ctx.fillRect(j * CellWidth, i * CellHeight, CellWidth, CellHeight);\n          ctx.fillStyle = transparentColor(p.color, 0.2);\n          ctx.fillRect(j * CellWidth, i * CellHeight, CellWidth, CellHeight);\n        } else {\n          ctx.fillStyle = intToColor(p.color);\n          ctx.fillRect(j * CellWidth, i * CellHeight, CellWidth, CellHeight);\n        }\n      }\n    }\n\n    this._pendingPixels.concat(this._queue).forEach((p) => {\n      ctx.fillStyle = intToColor(p.color);\n      ctx.fillRect(p.x * CellWidth, p.y * CellHeight, CellWidth, CellHeight);\n    })\n\n    if (this.state.selectedCell) {\n      const c = this.state.selectedCell;\n      if (this.state.pickingColor) {\n        const color = this._lines[c.y] ? this._lines[c.y][c.x].color : 0;\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = transparentColor(color, 0.5);\n        ctx.lineWidth = CellWidth * 4;\n        ctx.arc((c.x + 0.5) * CellWidth, (c.y + 0.5) * CellHeight, CellWidth * 4, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.closePath();\n\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = transparentColor(color, 1);\n        ctx.lineWidth = CellWidth * 2;\n        ctx.arc((c.x + 0.5) * CellWidth, (c.y + 0.5) * CellHeight, CellWidth * 4, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.closePath();\n      } else {\n        ctx.fillStyle = transparentColor(this.state.currentColor, 0.2);\n        ctx.fillRect(c.x * CellWidth, 0, CellWidth, c.y * CellHeight);\n        ctx.fillRect(c.x * CellWidth, (c.y+ 1) * CellHeight, CellWidth, (BoardHeight - c.y - 1) * CellHeight);\n        ctx.fillRect(0, c.y * CellHeight, c.x * CellWidth, CellHeight);\n        ctx.fillRect( (c.x + 1) * CellWidth, c.y * CellHeight, (BoardWidth - c.x - 1) * CellWidth, CellHeight);\n\n        ctx.beginPath();\n        ctx.lineWidth = 3;\n        ctx.fillStyle = intToColor(this.state.currentColor);\n        ctx.strokeStyle = intToColor(this.state.currentColor);\n        ctx.rect(c.x * CellWidth, c.y * CellHeight, CellWidth, CellHeight);\n        ctx.stroke();\n        ctx.closePath();\n      }\n    }\n\n    if (!this.state.boardLoaded) {\n      this.setState({\n        boardLoaded: true\n      })\n    }\n  }\n\n  async requestSignIn() {\n    const appTitle = 'Berry Club';\n    await this._walletConnection.requestSignIn(\n        NearConfig.contractName,\n        appTitle\n    )\n  }\n\n  async logOut() {\n    this._walletConnection.signOut();\n    this._accountId = null;\n    this.setState({\n      signedIn: !!this._accountId,\n      accountId: this._accountId,\n    })\n  }\n\n  hueColorChange(c) {\n    console.log(c)\n    this.setState({\n      gammaColors: generateGamma(c.hsl.h)\n    })\n    this.changeColor(c)\n  }\n\n  saveColor() {\n    const newColor = intToColor(this.state.currentColor);\n    const index = this.state.colors.indexOf(newColor);\n    if (index >= 0) {\n      this.state.colors.splice(index, 1);\n    }\n    this.setState({\n      colors: [newColor].concat(this.state.colors).slice(0, MaxNumColors)\n    });\n  }\n\n  changeColor(c) {\n    const currentColor = c.rgb.r * 0x010000 + c.rgb.g * 0x000100 + c.rgb.b;\n    this.setState({\n      pickerColor: c,\n      currentColor,\n    }, () => {\n      this.renderCanvas();\n    })\n  }\n\n  async buyTokens(amount) {\n    const requiredBalance = PixelPrice.muln(amount);\n    await this._contract.buy_tokens({}, new BN(\"30000000000000\"), requiredBalance);\n  }\n\n  setHover(accountIndex, v) {\n    if (v) {\n      this.setState({\n        highlightedAccountIndex: accountIndex,\n      }, () => {\n        this.renderCanvas();\n      })\n    } else if (this.state.highlightedAccountIndex === accountIndex) {\n      this.setState({\n        highlightedAccountIndex: -1,\n      }, () => {\n        this.renderCanvas();\n      })\n    }\n  }\n\n  render() {\n\n    const content = !this.state.connected ? (\n        <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n    ) : (this.state.signedIn ? (\n        <div>\n          <div className=\"float-right\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              onClick={() => this.logOut()}>Log out ({this.state.accountId})</button>\n          </div>\n          <div className=\"your-balance\">\n            Balance: <Balance\n              balance={this.state.balance - this.state.pendingPixels}\n              numPixels={this.state.numPixels}\n              pendingPixels={this.state.pendingPixels}\n          />\n          </div>\n          <div className=\"buttons\">\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => this.buyTokens(10)}>Buy <span className=\"font-weight-bold\">25{Avacado}</span> for <span className=\"font-weight-bold\">Ⓝ0.1</span></button>{' '}\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => this.buyTokens(40)}>Buy <span className=\"font-weight-bold\">100{Avacado}</span> for <span className=\"font-weight-bold\">Ⓝ0.4</span></button>{' '}\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => this.buyTokens(100)}>Buy <span className=\"font-weight-bold\">250{Avacado}</span> for <span className=\"font-weight-bold\">Ⓝ1</span></button>{' '}\n            <button\n              className=\"btn btn-success\"\n              onClick={() => this.buyTokens(500)}>DEAL: Buy <span className=\"font-weight-bold\">1500{Avacado}</span> for <span className=\"font-weight-bold\">Ⓝ5</span></button>\n          </div>\n          <div className=\"color-picker\">\n            <HuePicker color={ this.state.pickerColor } width=\"100%\" disableAlpha={true} onChange={(c) => this.hueColorChange(c)}/>\n            <GithubPicker className=\"circle-picker\" colors={this.state.gammaColors} color={ this.state.pickerColor } triangle='hide' width=\"100%\" onChangeComplete={(c) => this.changeColor(c)}/>\n            <GithubPicker className=\"circle-picker\" colors={this.state.colors} color={ this.state.pickerColor } triangle='hide' width=\"100%\" onChangeComplete={(c) => this.hueColorChange(c)}/>\n          </div>\n        </div>\n    ) : (\n        <div style={{marginBottom: \"10px\"}}>\n          <button\n              className=\"btn btn-primary\"\n              onClick={() => this.requestSignIn()}>Log in with NEAR Wallet</button>\n        </div>\n    ));\n    return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div>\n              <h2>{Avacado} Berry Club</h2>\n              {content}\n              <div>\n                {this.state.signedIn ? (<div>\n                  Draw here - one {Avacado} per pixel. Hold <span className=\"badge badge-secondary\">ALT</span> key to pick a color from board.{' '}\n                  <button\n                    className=\"btn btn-outline-secondary\"\n                    onClick={() => this.state.pickingColor ? this.disablePickColor() : this.enablePickColor() }>{ this.state.pickingColor ? 'Cancel' : 'Color Picker'}\n                  </button>\n                </div>) : \"\"}\n                <canvas ref={this.canvasRef}\n                        width={800}\n                        height={800}\n                        className={this.state.boardLoaded ? \"pixel-board\" : \"pixel-board c-animated-background\"}>\n\n                </canvas>\n              </div>\n            </div>\n            <div className=\"leaderboard\">\n              <h2>Leaderboard</h2>\n              <div>\n                <Leaderboard\n                  owners={this.state.owners}\n                  accounts={this.state.accounts}\n                  setHover={(accountIndex, v) => this.setHover(accountIndex, v)}\n                  highlightedAccountIndex={this.state.highlightedAccountIndex}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nconst Balance = (props) => {\n  return (\n    <span className=\"balances font-small\">\n      <span className=\"font-weight-bold\">{props.balance.toFixed(3)}</span>\n      {Avacado}{' (+'}\n      <span className=\"font-weight-bold\">{props.numPixels + 1}</span>\n      {Avacado}{'/day)'}\n      {\n        props.pendingPixels ? <span> ({props.pendingPixels} pending)</span> : \"\"\n      }\n    </span>\n  );\n};\n\nconst Leaderboard = (props) => {\n  const owners = props.owners.map((owner) => {\n    if (owner.accountIndex in props.accounts) {\n      owner.account = props.accounts[owner.accountIndex];\n    }\n    return <Owner\n      key={owner.accountIndex}\n      {...owner}\n      setHover={(v) => props.setHover(owner.accountIndex, v)}\n      isHighlighted={owner.accountIndex === props.highlightedAccountIndex}\n    />\n  })\n  return (\n    <table className=\"table table-hover table-sm\"><tbody>{owners}</tbody></table>\n  );\n};\n\nconst Owner = (props) => {\n  const account = props.account;\n  return (\n    <tr onMouseEnter={() => props.setHover(true)}\n        onMouseLeave={() => props.setHover(false)}>\n      <td>\n        {account ? <Account accountId={account.accountId} /> : \"...\"}\n      </td>\n      <td className=\"text-nowrap\">\n        <small>\n          <Balance balance={account ? account.balance : 0} numPixels={props.numPixels} />\n        </small>\n      </td>\n    </tr>\n  )\n}\n\nconst Account = (props) => {\n  const accountId = props.accountId;\n  let shortAccountId = accountId\n  if (accountId.length > 6 + 6 + 3) {\n    shortAccountId = accountId.slice(0, 6) + '...' + accountId.slice(-6);\n  }\n  return <a className=\"account\"\n            href={`https://explorer.near.org/accounts/${accountId}`}>{shortAccountId}</a>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}