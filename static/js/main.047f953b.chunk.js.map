{"version":3,"sources":["App.js","index.js"],"names":["PixelPrice","BN","NearConfig","networkId","nodeUrl","contractName","walletUrl","Avocado","role","aria-label","intToColor","c","toString","padStart","int2hsv","cInt","substr","r","parseInt","g","b","v","Math","max","min","h","transparentColor","a","generateGamma","hue","gammaColors","i","push","decodeLine","line","buf","Buffer","from","length","Error","pixels","color","readUInt32LE","ownerIndex","App","props","colors","map","toLowerCase","currentColor","floor","random","substring","state","connected","signedIn","accountId","balance","numPixels","pendingPixels","boardLoaded","selectedCell","pickerColor","pickingColor","owners","accounts","highlightedAccountIndex","selectedOwnerIndex","_buttonDown","_oldCounts","_numFailedTxs","_balanceRefreshTimer","canvasRef","React","createRef","_context","_lines","_queue","_pendingPixels","_refreshBoardTimer","_sendQueueTimer","_stopRefreshTime","Date","getTime","_accounts","_initNear","then","setState","_accountId","canvas","this","current","getContext","mouseMove","e","x","y","touches","rect","target","getBoundingClientRect","targetTouches","clientX","left","clientY","top","offsetX","offsetY","trunc","clientWidth","clientHeight","cell","JSON","stringify","renderCanvas","pickColor","saveColor","drawPixel","preventDefault","addEventListener","mouseDown","unselectCell","mouseUp","buttons","document","altKey","enablePickColor","disablePickColor","console","log","slice","_contract","draw","concat","Promise","all","refreshBoard","refreshAccountStats","forEach","p","_pending","ready","clearTimeout","_sendQueue","setTimeout","_pingQueue","parseFloat","get_account_balance","account_id","get_account_num_pixels","clearInterval","startTime","rewardPerMs","_pixelCost","setInterval","t","keyStore","nearAPI","BrowserLocalStorageKeyStore","Object","assign","deps","near","_keyStore","_near","_walletConnection","getAccountId","_account","account","viewMethods","changeMethods","get_pixel_cost","_lineVersions","Array","fill","forced","hidden","get_line_versions","lineVersions","needLines","requestLines","lines","get_lines","results","flat","lineIndex","_refreshOwners","counts","sortedKeys","keys","sort","accountIndex","get_account_id_by_index","account_index","accountBalance","ctx","j","fillStyle","fillRect","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","closePath","CellWidth","CellHeight","arc","PI","requestSignIn","signOut","hsl","changeColor","newColor","index","indexOf","splice","rgb","amount","requiredBalance","muln","buy_tokens","content","className","onClick","logOut","Balance","buyTokens","width","disableAlpha","onChange","hueColorChange","triangle","onChangeComplete","style","marginBottom","aria-hidden","ref","height","Leaderboard","setHover","Component","toFixed","owner","Owner","key","isSelected","isHighlighted","onMouseEnter","onMouseLeave","Account","shortAccountId","href","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.047f953b.chunk.js","sourcesContent":["import \"./App.scss\";\nimport React from 'react';\nimport BN from 'bn.js';\nimport * as nearAPI from 'near-api-js'\nimport { HuePicker, GithubPicker } from 'react-color'\n\nconst PixelPrice = new BN(\"10000000000000000000000\");\nconst IsMainnet = true;\nconst TestNearConfig = {\n  networkId: 'testnet',\n  nodeUrl: 'https://rpc.testnet.near.org',\n  contractName: 'dev-1604708520705-2360364',\n  walletUrl: 'https://wallet.testnet.near.org',\n};\nconst MainNearConfig = {\n  networkId: 'mainnet',\n  nodeUrl: 'https://rpc.mainnet.near.org',\n  contractName: 'berryclub.ek.near',\n  walletUrl: 'https://wallet.near.org',\n};\nconst NearConfig = IsMainnet ? MainNearConfig : TestNearConfig;\n\nconst Avocado = <span role=\"img\" aria-label=\"avocado\">🥑</span>;\n\nconst BoardHeight = 50;\nconst BoardWidth = 50;\nconst NumLinesPerFetch = 10;\nconst ExpectedLineLength = 4 + 8 * BoardWidth;\nconst CellWidth = 16;\nconst CellHeight = 16;\nconst MaxNumColors = 31;\nconst BatchOfPixels = 30;\n// 500 ms\nconst BatchTimeout = 500;\nconst RefreshBoardTimeout = 1000;\nconst MaxWorkTime = 10 * 60 * 1000;\n\nconst intToColor = (c) => `#${c.toString(16).padStart(6, '0')}`;\nconst int2hsv = (cInt) => {\n  cInt = intToColor(cInt).substr(1)\n  const r = parseInt(cInt.substr(0, 2), 16) / 255\n  const g = parseInt(cInt.substr(2, 2), 16) / 255\n  const b = parseInt(cInt.substr(4, 2), 16) / 255\n  let v=Math.max(r,g,b), c=v-Math.min(r,g,b);\n  let h= c && ((v===r) ? (g-b)/c : ((v===g) ? 2+(b-r)/c : 4+(r-g)/c));\n  return [60*(h<0?h+6:h), v&&c/v, v];\n}\nconst transparentColor = (c, a) => `rgba(${(c >> 16) / 1}, ${((c >> 8) & 0xff) / 1}, ${(c & 0xff) / 1}, ${a})`\nconst generateGamma = (hue) => {\n  const gammaColors = [];\n  for (let i = 0; i < MaxNumColors; ++i) {\n    gammaColors.push(`hsl(${hue}, 100%, ${100 * i / (MaxNumColors - 1)}%)`);\n  }\n  return gammaColors;\n};\nconst decodeLine = (line) => {\n  let buf = Buffer.from(line, 'base64');\n  if (buf.length !== ExpectedLineLength) {\n    throw new Error(\"Unexpected encoded line length\");\n  }\n  let pixels = []\n  for (let i = 4; i < buf.length; i += 8) {\n    let color = buf.readUInt32LE(i);\n    let ownerIndex = buf.readUInt32LE(i + 4);\n    pixels.push({\n      color,\n      ownerIndex,\n    })\n  }\n  return pixels;\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const colors = [\"#000000\", \"#666666\", \"#aaaaaa\", \"#FFFFFF\", \"#F44E3B\", \"#D33115\", \"#9F0500\", \"#FE9200\", \"#E27300\", \"#C45100\", \"#FCDC00\", \"#FCC400\", \"#FB9E00\", \"#DBDF00\", \"#B0BC00\", \"#808900\", \"#A4DD00\", \"#68BC00\", \"#194D33\", \"#68CCCA\", \"#16A5A5\", \"#0C797D\", \"#73D8FF\", \"#009CE0\", \"#0062B1\", \"#AEA1FF\", \"#7B64FF\", \"#653294\", \"#FDA1FF\", \"#FA28FF\", \"#AB149E\"].map((c) => c.toLowerCase());\n    const currentColor = parseInt(colors[Math.floor(Math.random() * colors.length)].substring(1), 16);\n\n    this.state = {\n      connected: false,\n      signedIn: false,\n      accountId: null,\n      balance: 0.0,\n      numPixels: 0,\n      pendingPixels: 0,\n      boardLoaded: false,\n      selectedCell: null,\n      currentColor,\n      pickerColor: intToColor(currentColor),\n      colors,\n      gammaColors: generateGamma(0),\n      pickingColor: false,\n      owners: [],\n      accounts: {},\n      highlightedAccountIndex: -1,\n      selectedOwnerIndex: false,\n    };\n\n    this._buttonDown = false;\n    this._oldCounts = {};\n    this._numFailedTxs = 0;\n    this._balanceRefreshTimer = null;\n    this.canvasRef = React.createRef();\n    this._context = false;\n    this._lines = false;\n    this._queue = [];\n    this._pendingPixels = [];\n    this._refreshBoardTimer = null;\n    this._sendQueueTimer = null;\n    this._stopRefreshTime = new Date().getTime() + MaxWorkTime;\n    this._accounts = {};\n\n    this._initNear().then(() => {\n      this.setState({\n        connected: true,\n        signedIn: !!this._accountId,\n        accountId: this._accountId,\n      });\n    });\n  }\n\n  componentDidMount() {\n    const canvas = this.canvasRef.current;\n    this._context = canvas.getContext('2d');\n\n    const mouseMove = (e) => {\n      let x, y;\n      if ('touches' in e) {\n        if (e.touches.length > 1) {\n          return true;\n        } else {\n          const rect = e.target.getBoundingClientRect();\n          x = e.targetTouches[0].clientX - rect.left;\n          y = e.targetTouches[0].clientY - rect.top;\n        }\n      } else {\n        x = e.offsetX;\n        y = e.offsetY;\n      }\n      x = Math.trunc(x / e.target.clientWidth * BoardWidth);\n      y = Math.trunc(y / e.target.clientHeight * BoardWidth);\n      let cell = null;\n      if (x >= 0 && x < BoardWidth && y >= 0 && y < BoardHeight) {\n        cell = { x, y };\n      }\n      if (JSON.stringify(cell) !== JSON.stringify(this.state.selectedCell)) {\n        this.setState({\n          selectedCell: cell,\n          selectedOwnerIndex: this._lines && cell && this._lines[cell.y] && this._lines[cell.y][cell.x].ownerIndex\n        }, async () => {\n          this.renderCanvas()\n          if (this.state.selectedCell !== null && this._buttonDown) {\n            if (this.state.pickingColor) {\n              this.pickColor(this.state.selectedCell);\n            } else {\n              this.saveColor();\n              await this.drawPixel(this.state.selectedCell);\n            }\n          }\n        })\n      }\n      e.preventDefault();\n      return false;\n    };\n\n    canvas.addEventListener('mousemove', mouseMove);\n    canvas.addEventListener('touchmove', mouseMove);\n\n    const mouseDown = async (e) => {\n      this._buttonDown = true;\n      if (this.state.selectedCell !== null) {\n        if (this.state.pickingColor) {\n          this.pickColor(this.state.selectedCell);\n        } else {\n          this.saveColor();\n          await this.drawPixel(this.state.selectedCell);\n        }\n      }\n    };\n\n    canvas.addEventListener('mousedown', mouseDown);\n    canvas.addEventListener('touchstart', mouseDown);\n\n    const unselectCell = () => {\n      this.setState({\n        selectedCell: null,\n      }, () => this.renderCanvas());\n    }\n\n    const mouseUp = async (e) => {\n      this._buttonDown = false;\n      if ('touches' in e) {\n        unselectCell();\n      }\n    }\n\n    canvas.addEventListener('mouseup', mouseUp);\n    canvas.addEventListener('touchend', mouseUp);\n\n    canvas.addEventListener('mouseleave', unselectCell);\n\n    canvas.addEventListener('mouseenter', (e) => {\n      if (this._buttonDown) {\n        if (!('touches' in e) && !(e.buttons & 1)) {\n          this._buttonDown = false;\n        }\n      }\n    });\n\n    document.addEventListener('keydown', (e) => {\n      e.altKey && this.enablePickColor()\n    })\n\n    document.addEventListener('keyup', (e) => {\n      !e.altKey && this.disablePickColor()\n    })\n  }\n\n  enablePickColor() {\n    this.setState({\n      pickingColor: true,\n    }, () => {\n      this.renderCanvas()\n    });\n  }\n\n  disablePickColor() {\n    this.setState({\n      pickingColor: false,\n    }, () => {\n      this.renderCanvas()\n    });\n  }\n\n  pickColor(cell) {\n    if (!this.state.signedIn || !this._lines || !this._lines[cell.y]) {\n      return;\n    }\n    const color = this._lines[cell.y][cell.x].color;\n\n    console.log(int2hsv(color))\n\n    this.setState({\n      currentColor: color,\n      pickerColor: intToColor(color),\n      gammaColors: generateGamma(int2hsv(color)[0]),\n      pickingColor: false,\n    }, () => {\n      this.renderCanvas()\n    });\n  }\n\n  async _sendQueue() {\n    const pixels = this._queue.slice(0, BatchOfPixels);\n    this._queue = this._queue.slice(BatchOfPixels);\n    this._pendingPixels = pixels;\n\n    try {\n      await this._contract.draw({\n        pixels\n      }, new BN(\"75000000000000\"));\n      this._numFailedTxs = 0;\n    } catch (error) {\n      console.log(\"Failed to send a transaction\", error);\n      this._numFailedTxs += 1;\n      if (this._numFailedTxs < 3) {\n        this._queue = this._queue.concat(this._pendingPixels);\n        this._pendingPixels = [];\n      } else {\n        this._pendingPixels = [];\n        this._queue = [];\n      }\n    }\n    try {\n      await Promise.all([this.refreshBoard(true), this.refreshAccountStats()]);\n    } catch (e) {\n      // ignore\n    }\n    this._pendingPixels.forEach((p) => {\n      if (this._pending[p.y][p.x] === p.color)\n      {\n       this._pending[p.y][p.x] = -1;\n      }\n    });\n    this._pendingPixels = [];\n  }\n\n  async _pingQueue(ready) {\n    if (this._sendQueueTimer) {\n      clearTimeout(this._sendQueueTimer);\n      this._sendQueueTimer = null;\n    }\n\n    if (this._pendingPixels.length === 0 && (this._queue.length >= BatchOfPixels || ready)) {\n      await this._sendQueue();\n    }\n    if (this._queue.length > 0) {\n      this._sendQueueTimer = setTimeout(async () => {\n        await this._pingQueue(true);\n      }, BatchTimeout);\n    }\n\n  }\n\n  async drawPixel(cell) {\n    if (!this.state.signedIn || !this._lines || !this._lines[cell.y]) {\n      return;\n    }\n    if (this.state.balance - this.state.pendingPixels < 1) {\n      return;\n    }\n\n    if (this._pending[cell.y][cell.x] !== this.state.currentColor && this._lines[cell.y][cell.x].color !== this.state.currentColor) {\n      this._pending[cell.y][cell.x] = this.state.currentColor;\n    } else {\n      return;\n    }\n\n    this._queue.push({\n      x: cell.x,\n      y: cell.y,\n      color: this.state.currentColor,\n    });\n\n    this._stopRefreshTime = new Date().getTime() + MaxWorkTime;\n    await this._pingQueue(false);\n  }\n\n  async refreshAccountStats() {\n    let balance = parseFloat(await this._contract.get_account_balance({account_id: this._accountId}));\n    let numPixels = await this._contract.get_account_num_pixels({account_id: this._accountId})\n    if (this._balanceRefreshTimer) {\n      clearInterval(this._balanceRefreshTimer);\n      this._balanceRefreshTimer = null;\n    }\n    const startTime = new Date().getTime();\n    const rewardPerMs = (numPixels + 1) * this._pixelCost / (24 * 60 * 60 * 1000);\n\n    this.setState({\n      balance: balance / this._pixelCost,\n      pendingPixels: this._queue.length,\n      numPixels,\n    });\n\n    this._balanceRefreshTimer = setInterval(() => {\n      const t = new Date().getTime();\n      this.setState({\n        balance: (balance + (t - startTime) * rewardPerMs) / this._pixelCost,\n        pendingPixels: this._pendingPixels.length + this._queue.length,\n      })\n    }, 100);\n  }\n\n  async _initNear() {\n    const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n    const near = await nearAPI.connect(Object.assign({ deps: { keyStore } }, NearConfig));\n    this._keyStore = keyStore;\n    this._near = near;\n\n    this._walletConnection = new nearAPI.WalletConnection(near, NearConfig.contractName);\n    this._accountId = this._walletConnection.getAccountId();\n\n    this._account = this._walletConnection.account();\n    this._contract = new nearAPI.Contract(this._account, NearConfig.contractName, {\n      viewMethods: ['get_lines', 'get_line_versions', 'get_pixel_cost', 'get_account_balance', 'get_account_num_pixels', 'get_account_id_by_index'],\n      changeMethods: ['draw', 'buy_tokens'],\n    });\n    this._pixelCost = parseFloat(await this._contract.get_pixel_cost());\n    if (this._accountId) {\n      await this.refreshAccountStats();\n    }\n    this._lineVersions = Array(BoardHeight).fill(-1);\n    this._lines = Array(BoardHeight).fill(false);\n    this._pending = Array(BoardHeight).fill(false);\n    this._pending.forEach((v, i, a) => a[i] = Array(BoardWidth).fill(-1));\n    await this.refreshBoard(true);\n  }\n\n  async refreshBoard(forced) {\n    if (this._refreshBoardTimer) {\n      clearTimeout(this._refreshBoardTimer);\n      this._refreshBoardTimer = null;\n    }\n    const t = new Date().getTime();\n    if (t < this._stopRefreshTime) {\n      this._refreshBoardTimer = setTimeout(async () => {\n        await this.refreshBoard(false);\n      }, RefreshBoardTimeout);\n    }\n\n    if (!forced && document.hidden) {\n      return;\n    }\n\n    let lineVersions = await this._contract.get_line_versions();\n    let needLines = [];\n    for (let i = 0; i < BoardHeight; ++i) {\n      if (lineVersions[i] !== this._lineVersions[i]) {\n        needLines.push(i);\n      }\n    }\n    let requestLines = []\n    for (let i = 0; i < needLines.length; i += NumLinesPerFetch) {\n      requestLines.push(needLines.slice(i, i + NumLinesPerFetch));\n    }\n\n    let results = await Promise.all(requestLines.map(lines => this._contract.get_lines({lines})));\n    results = results.flat();\n    requestLines = requestLines.flat();\n    for (let i = 0; i < requestLines.length; ++i) {\n      let lineIndex = requestLines[i];\n      let line = decodeLine(results[i]);\n      this._lines[lineIndex] = line;\n    }\n\n    this._lineVersions = lineVersions;\n    this._refreshOwners();\n    this.renderCanvas();\n  }\n\n  _refreshOwners() {\n    const counts = {};\n    this._lines.flat().forEach((cell) => {\n      counts[cell.ownerIndex] = (counts[cell.ownerIndex] || 0) + 1;\n    })\n    delete counts[0];\n    const sortedKeys = Object.keys(counts).sort((a, b) => counts[b] - counts[a]);\n    this.setState({\n      owners: sortedKeys.map((accountIndex) => {\n        accountIndex = parseInt(accountIndex);\n        return {\n          accountIndex,\n          numPixels: counts[accountIndex],\n        }\n      })\n    })\n    sortedKeys.forEach(async (accountIndex) => {\n      accountIndex = parseInt(accountIndex);\n      if (!(accountIndex in this._accounts) || counts[accountIndex] !== (this._oldCounts[accountIndex] || 0)) {\n        try {\n          const accountId = await this._contract.get_account_id_by_index({account_index: accountIndex});\n          const accountBalance = await this._contract.get_account_balance({account_id: accountId});\n          const balance = parseFloat(accountBalance) / this._pixelCost;\n          this._accounts[accountIndex] = {\n            accountIndex,\n            accountId,\n            balance,\n          };\n        } catch (err) {\n          console.log(\"Failed to fetch account index #\", accountIndex, err)\n        }\n        this.setState({\n          accounts: Object.assign({}, this._accounts),\n        })\n      }\n    })\n    this.setState({\n      accounts: Object.assign({}, this._accounts),\n    })\n    this._oldCounts = counts;\n  }\n\n  renderCanvas() {\n    if (!this._context || !this._lines) {\n      return;\n    }\n\n    const ctx = this._context;\n\n    for (let i = 0; i < BoardHeight; ++i) {\n      const line = this._lines[i];\n      if (!line) {\n        continue;\n      }\n      for (let j = 0; j < BoardWidth; ++j) {\n        const p = line[j];\n        if (this.state.highlightedAccountIndex >= 0) {\n          if (p.ownerIndex !== this.state.highlightedAccountIndex) {\n            ctx.fillStyle = '#000';\n            ctx.fillRect(j * CellWidth, i * CellHeight, CellWidth, CellHeight);\n            ctx.fillStyle = transparentColor(p.color, 0.2);\n            ctx.fillRect(j * CellWidth, i * CellHeight, CellWidth, CellHeight);\n            ctx.beginPath();\n            ctx.strokeStyle = ctx.fillStyle = 'rgba(255, 255, 255, 0.2)';\n            ctx.lineWidth = 0.5;\n            ctx.moveTo(j * CellWidth, i * CellHeight);\n            ctx.lineTo((j + 1) * CellWidth, (i + 1) * CellHeight);\n            ctx.moveTo((j + 1) * CellWidth, i * CellHeight);\n            ctx.lineTo((j) * CellWidth, (i + 1) * CellHeight);\n            ctx.stroke();\n            ctx.closePath();\n          } else {\n            ctx.fillStyle = intToColor(p.color);\n            ctx.fillRect(j * CellWidth, i * CellHeight, CellWidth, CellHeight);\n            ctx.beginPath();\n            ctx.strokeStyle = ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';\n            ctx.lineWidth = 0.5;\n            ctx.rect(j * CellWidth + 0.5, i * CellHeight + 0.5, CellWidth - 1, CellHeight - 1);\n            ctx.stroke();\n            ctx.closePath();\n          }\n        } else {\n          ctx.fillStyle = intToColor(p.color);\n          ctx.fillRect(j * CellWidth, i * CellHeight, CellWidth, CellHeight);\n        }\n      }\n    }\n\n    this._pendingPixels.concat(this._queue).forEach((p) => {\n      ctx.fillStyle = intToColor(p.color);\n      ctx.fillRect(p.x * CellWidth, p.y * CellHeight, CellWidth, CellHeight);\n    })\n\n    if (this.state.selectedCell) {\n      const c = this.state.selectedCell;\n      if (this.state.pickingColor) {\n        const color = this._lines[c.y] ? this._lines[c.y][c.x].color : 0;\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = transparentColor(color, 0.5);\n        ctx.lineWidth = CellWidth * 4;\n        ctx.arc((c.x + 0.5) * CellWidth, (c.y + 0.5) * CellHeight, CellWidth * 4, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.closePath();\n\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = transparentColor(color, 1);\n        ctx.lineWidth = CellWidth * 2;\n        ctx.arc((c.x + 0.5) * CellWidth, (c.y + 0.5) * CellHeight, CellWidth * 4, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.closePath();\n      } else {\n        ctx.fillStyle = transparentColor(this.state.currentColor, 0.2);\n        ctx.fillRect(c.x * CellWidth, 0, CellWidth, c.y * CellHeight);\n        ctx.fillRect(c.x * CellWidth, (c.y+ 1) * CellHeight, CellWidth, (BoardHeight - c.y - 1) * CellHeight);\n        ctx.fillRect(0, c.y * CellHeight, c.x * CellWidth, CellHeight);\n        ctx.fillRect( (c.x + 1) * CellWidth, c.y * CellHeight, (BoardWidth - c.x - 1) * CellWidth, CellHeight);\n\n        ctx.beginPath();\n        ctx.lineWidth = 3;\n        ctx.fillStyle = intToColor(this.state.currentColor);\n        ctx.strokeStyle = intToColor(this.state.currentColor);\n        ctx.rect(c.x * CellWidth, c.y * CellHeight, CellWidth, CellHeight);\n        ctx.stroke();\n        ctx.closePath();\n      }\n    }\n\n    if (!this.state.boardLoaded) {\n      this.setState({\n        boardLoaded: true\n      })\n    }\n  }\n\n  async requestSignIn() {\n    const appTitle = 'Berry Club';\n    await this._walletConnection.requestSignIn(\n        NearConfig.contractName,\n        appTitle\n    )\n  }\n\n  async logOut() {\n    this._walletConnection.signOut();\n    this._accountId = null;\n    this.setState({\n      signedIn: !!this._accountId,\n      accountId: this._accountId,\n    })\n  }\n\n  hueColorChange(c) {\n    console.log(c)\n    this.setState({\n      gammaColors: generateGamma(c.hsl.h)\n    })\n    this.changeColor(c)\n  }\n\n  saveColor() {\n    const newColor = intToColor(this.state.currentColor);\n    const index = this.state.colors.indexOf(newColor);\n    if (index >= 0) {\n      this.state.colors.splice(index, 1);\n    }\n    this.setState({\n      colors: [newColor].concat(this.state.colors).slice(0, MaxNumColors)\n    });\n  }\n\n  changeColor(c) {\n    const currentColor = c.rgb.r * 0x010000 + c.rgb.g * 0x000100 + c.rgb.b;\n    this.setState({\n      pickerColor: c,\n      currentColor,\n    }, () => {\n      this.renderCanvas();\n    })\n  }\n\n  async buyTokens(amount) {\n    const requiredBalance = PixelPrice.muln(amount);\n    await this._contract.buy_tokens({}, new BN(\"30000000000000\"), requiredBalance);\n  }\n\n  setHover(accountIndex, v) {\n    if (v) {\n      this.setState({\n        highlightedAccountIndex: accountIndex,\n      }, () => {\n        this.renderCanvas();\n      })\n    } else if (this.state.highlightedAccountIndex === accountIndex) {\n      this.setState({\n        highlightedAccountIndex: -1,\n      }, () => {\n        this.renderCanvas();\n      })\n    }\n  }\n\n  render() {\n\n    const content = !this.state.connected ? (\n        <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n    ) : (this.state.signedIn ? (\n        <div>\n          <div className=\"float-right\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              onClick={() => this.logOut()}>Log out ({this.state.accountId})</button>\n          </div>\n          <div className=\"your-balance\">\n            Balance: <Balance\n              balance={this.state.balance - this.state.pendingPixels}\n              numPixels={this.state.numPixels}\n              pendingPixels={this.state.pendingPixels}\n          />\n          </div>\n          <div className=\"buttons\">\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => this.buyTokens(10)}>Buy <span className=\"font-weight-bold\">25{Avocado}</span> for <span className=\"font-weight-bold\">Ⓝ0.1</span></button>{' '}\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => this.buyTokens(40)}>Buy <span className=\"font-weight-bold\">100{Avocado}</span> for <span className=\"font-weight-bold\">Ⓝ0.4</span></button>{' '}\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => this.buyTokens(100)}>Buy <span className=\"font-weight-bold\">250{Avocado}</span> for <span className=\"font-weight-bold\">Ⓝ1</span></button>{' '}\n            <button\n              className=\"btn btn-success\"\n              onClick={() => this.buyTokens(500)}>DEAL: Buy <span className=\"font-weight-bold\">1500{Avocado}</span> for <span className=\"font-weight-bold\">Ⓝ5</span></button>\n          </div>\n          <div className=\"color-picker\">\n            <HuePicker color={ this.state.pickerColor } width=\"100%\" disableAlpha={true} onChange={(c) => this.hueColorChange(c)}/>\n            <GithubPicker className=\"circle-picker\" colors={this.state.gammaColors} color={ this.state.pickerColor } triangle='hide' width=\"100%\" onChangeComplete={(c) => this.changeColor(c)}/>\n            <GithubPicker className=\"circle-picker\" colors={this.state.colors} color={ this.state.pickerColor } triangle='hide' width=\"100%\" onChangeComplete={(c) => this.hueColorChange(c)}/>\n          </div>\n        </div>\n    ) : (\n        <div style={{marginBottom: \"10px\"}}>\n          <button\n              className=\"btn btn-primary\"\n              onClick={() => this.requestSignIn()}>Log in with NEAR Wallet</button>\n        </div>\n    ));\n    return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div>\n              <h2>{Avocado} Berry Club</h2>\n              {content}\n              <div>\n                {this.state.signedIn ? (<div>\n                  Draw here - one {Avocado} per pixel. Hold <span className=\"badge badge-secondary\">ALT</span> key to pick a color from board.{' '}\n                  <button\n                    className=\"btn btn-outline-secondary\"\n                    onClick={() => this.state.pickingColor ? this.disablePickColor() : this.enablePickColor() }>{ this.state.pickingColor ? 'Cancel' : 'Color Picker'}\n                  </button>\n                </div>) : \"\"}\n                <canvas ref={this.canvasRef}\n                        width={800}\n                        height={800}\n                        className={this.state.boardLoaded ? \"pixel-board\" : \"pixel-board c-animated-background\"}>\n\n                </canvas>\n              </div>\n            </div>\n            <div className=\"leaderboard\">\n              <h2>Leaderboard</h2>\n              <div>\n                <Leaderboard\n                  owners={this.state.owners}\n                  accounts={this.state.accounts}\n                  setHover={(accountIndex, v) => this.setHover(accountIndex, v)}\n                  selectedOwnerIndex={this.state.selectedOwnerIndex}\n                  highlightedAccountIndex={this.state.highlightedAccountIndex}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nconst Balance = (props) => {\n  return (\n    <span className=\"balances font-small\">\n      <span className=\"font-weight-bold\">{props.balance.toFixed(3)}</span>\n      {Avocado}{' (+'}\n      <span className=\"font-weight-bold\">{props.numPixels + 1}</span>\n      {Avocado}{'/day)'}\n      {\n        props.pendingPixels ? <span> ({props.pendingPixels} pending)</span> : \"\"\n      }\n    </span>\n  );\n};\n\nconst Leaderboard = (props) => {\n  const owners = props.owners.map((owner) => {\n    if (owner.accountIndex in props.accounts) {\n      owner.account = props.accounts[owner.accountIndex];\n    }\n    return <Owner\n      key={owner.accountIndex}\n      {...owner}\n      isSelected={owner.accountIndex === props.selectedOwnerIndex}\n      setHover={(v) => props.setHover(owner.accountIndex, v)}\n      isHighlighted={owner.accountIndex === props.highlightedAccountIndex}\n    />\n  })\n  return (\n    <table className=\"table table-hover table-sm\"><tbody>{owners}</tbody></table>\n  );\n};\n\nconst Owner = (props) => {\n  const account = props.account;\n  return (\n    <tr onMouseEnter={() => props.setHover(true)}\n        onMouseLeave={() => props.setHover(false)}\n        className={props.isSelected ? \"selected\" : \"\"}>\n      <td>\n        {account ? <Account accountId={account.accountId} /> : \"...\"}\n      </td>\n      <td className=\"text-nowrap\">\n        <small>\n          <Balance balance={account ? account.balance : 0} numPixels={props.numPixels} />\n        </small>\n      </td>\n    </tr>\n  )\n}\n\nconst Account = (props) => {\n  const accountId = props.accountId;\n  let shortAccountId = accountId\n  if (accountId.length > 6 + 6 + 3) {\n    shortAccountId = accountId.slice(0, 6) + '...' + accountId.slice(-6);\n  }\n  return <a className=\"account\"\n            href={`https://explorer.near.org/accounts/${accountId}`}>{shortAccountId}</a>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}