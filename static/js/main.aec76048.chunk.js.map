{"version":3,"sources":["App.js","Weapons.js","index.js"],"names":["PixelPrice","BN","NearConfig","window","location","hostname","networkId","nodeUrl","contractName","walletUrl","Avocado","role","aria-label","className","Banana","Cucumber","Pepper","Berry","intToColor","c","toString","padStart","intToColorWithAlpha","a","Math","round","rgbaToInt","cr","cg","cb","ca","bgColor","bb","bg","br","imgColorToInt","int2hsv","cInt","substr","r","parseInt","g","b","v","max","min","h","transparentColor","generateGamma","hue","gammaColors","i","push","decodeLine","line","buf","Buffer","from","length","Error","pixels","color","readUInt32LE","ownerIndex","App","props","colors","map","toLowerCase","currentColor","substring","timeMs","Date","getTime","freeDrawingStartMsEstimated","OneDayMs","state","connected","signedIn","accountId","pendingPixels","boardLoaded","selectedCell","alpha","pickerColor","pickingColor","owners","accounts","highlightedAccountIndex","selectedOwnerIndex","farmingBanana","weaponsOn","weaponsCodePosition","freeDrawingStart","freeDrawingEnd","watchMode","_buttonDown","_oldCounts","_numFailedTxs","_balanceRefreshTimer","canvasRef","React","createRef","_context","_lines","_queue","_pendingPixels","_refreshBoardTimer","_sendQueueTimer","_stopRefreshTime","_accounts","_initNear","then","setState","_accountId","ircAccountId","replace","_freeDrawingStart","_freeDrawingEnd","canvas","this","current","getContext","click","rendering","drawImg","pickColor","saveColor","drawPixel","mouseMove","e","x","y","touches","rect","target","getBoundingClientRect","targetTouches","clientX","left","clientY","top","offsetX","offsetY","trunc","clientWidth","clientHeight","cell","JSON","stringify","renderCanvas","preventDefault","addEventListener","mouseDown","unselectCell","mouseUp","buttons","document","altKey","enablePickColor","key","disablePickColor","slice","_contract","draw","console","log","concat","Promise","all","refreshBoard","refreshAccountStats","forEach","p","_pending","ready","clearTimeout","_sendQueue","setTimeout","_pingQueue","balance","account","avocadoBalance","_isFreeDrawing","avocadoNeeded","img","imageData","w","width","height","d","Uint32Array","data","buffer","j","imgColor","account_id","accountIndex","account_index","parseFloat","avocado_balance","_pixelCost","bananaBalance","banana_balance","numPixels","num_pixels","farmingPreference","farming_preference","startTime","avocadoPixels","bananaPixels","avocadoRewardPerMs","bananaRewardPerMs","get_account","parseAccount","get_account_by_index","getAccount","clearInterval","setInterval","t","Object","assign","keyStore","nearAPI","BrowserLocalStorageKeyStore","deps","near","_keyStore","_near","_walletConnection","getAccountId","_account","viewMethods","changeMethods","get_pixel_cost","get_free_drawing_timestamp","freeDrawingTimestamp","_lineVersions","Array","fill","forced","hidden","get_line_versions","lineVersions","needLines","requestLines","lines","get_lines","results","flat","lineIndex","_refreshOwners","counts","sortedKeys","keys","sort","getAccountByIndex","ctx","fillStyle","fillRect","CellWidth","CellHeight","beginPath","strokeStyle","lineWidth","stroke","closePath","arc","PI","requestSignIn","signOut","rgb","changeColor","hsl","newColor","index","indexOf","splice","hex","hsv","amount","requiredBalance","muln","buy_tokens","select_farming_preference","berry","date","watchClass","isFreeDrawing","freeDrawing","initialTime","direction","timeToUpdate","lastUnit","checkpoints","time","Fragment","Days","formatValue","Hours","Minutes","Seconds","Milliseconds","content","onClick","logOut","Balance","detailed","onChange","switchBerry","checked","offColor","onColor","uncheckedIcon","checkedIcon","buyTokens","hueColorChange","alphaColorChange","triangle","onChangeComplete","style","marginBottom","aria-hidden","weapons","renderIt","renderImg","enableWatchMode","body","backgroundColor","href","ref","Leaderboard","setHover","title","frameBorder","src","allow","allowFullScreen","data-ribbon","Component","fraction","avacadoBalance","avocadoFarm","bananaFarm","toFixed","owner","Owner","isSelected","isHighlighted","onMouseEnter","onMouseLeave","Account","shortAccountId","Weapons","lockedAspect","sourceImage","Image","onload","clearRect","imageSmoothingQuality","drawImage","getImageData","reduce","sum","f","reader","FileReader","readAsDataURL","naturalWidth","naturalHeight","aspect","event","result","value","type","onFilesChange","onError","onFilesError","multiple","accepts","minFileSize","clickable","updateVal","changeLockedAspect","disabled","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.aec76048.chunk.js","sourcesContent":["import \"./App.scss\";\nimport \"./gh-fork-ribbon.css\";\nimport React from \"react\";\nimport BN from \"bn.js\";\nimport * as nearAPI from \"near-api-js\";\nimport { AlphaPicker, HuePicker, GithubPicker } from \"react-color\";\nimport Switch from \"react-switch\";\nimport { Weapons } from \"./Weapons\";\nimport Timer from \"react-compound-timer\";\n\nconst PixelPrice = new BN(\"10000000000000000000000\");\nconst IsMainnet = window.location.hostname === \"berryclub.io\";\nconst TestNearConfig = {\n  networkId: \"testnet\",\n  nodeUrl: \"https://rpc.testnet.near.org\",\n  contractName: \"berryclub.testnet\",\n  walletUrl: \"https://wallet.testnet.near.org\",\n};\nconst MainNearConfig = {\n  networkId: \"mainnet\",\n  nodeUrl: \"https://rpc.mainnet.near.org\",\n  contractName: \"berryclub.ek.near\",\n  walletUrl: \"https://wallet.near.org\",\n};\nconst NearConfig = IsMainnet ? MainNearConfig : TestNearConfig;\n\nconst Avocado = (\n  <span role=\"img\" aria-label=\"avocado\" className=\"berry\">\n    🥑\n  </span>\n);\nconst Banana = (\n  <span role=\"img\" aria-label=\"banana\" className=\"berry\">\n    🍌\n  </span>\n);\nconst Cucumber = (\n  <span role=\"img\" aria-label=\"cucumber\" className=\"berry\">\n    🥒\n  </span>\n);\nconst Pepper = (\n  <span role=\"img\" aria-label=\"pepper\" className=\"berry\">\n    🌶️\n  </span>\n);\n\nconst Berry = {\n  Avocado: \"Avocado\",\n  Banana: \"Banana\",\n};\n\nconst BoardHeight = 50;\nconst BoardWidth = 50;\nconst NumLinesPerFetch = 10;\nconst ExpectedLineLength = 4 + 8 * BoardWidth;\nconst CellWidth = 12;\nconst CellHeight = 12;\nconst MaxNumColors = 31;\nconst BatchOfPixels = 100;\n// 500 ms\nconst BatchTimeout = 500;\nconst RefreshBoardTimeout = 1000;\nconst MaxWorkTime = 10 * 60 * 1000;\nconst OneDayMs = 24 * 60 * 60 * 1000;\n\nconst intToColor = (c) => `#${c.toString(16).padStart(6, \"0\")}`;\nconst intToColorWithAlpha = (c, a) =>\n  `#${c.toString(16).padStart(6, \"0\")}${Math.round(255 * a)\n    .toString(16)\n    .padStart(2, \"0\")}`;\n\nconst rgbaToInt = (cr, cg, cb, ca, bgColor) => {\n  const bb = bgColor & 255;\n  const bg = (bgColor >> 8) & 255;\n  const br = (bgColor >> 16) & 255;\n\n  const r = Math.round(cr * ca + br * (1 - ca));\n  const g = Math.round(cg * ca + bg * (1 - ca));\n  const b = Math.round(cb * ca + bb * (1 - ca));\n  return (r << 16) + (g << 8) + b;\n};\n\nconst imgColorToInt = (c, bgColor) => {\n  const cr = c & 255;\n  const cg = (c >> 8) & 255;\n  const cb = (c >> 16) & 255;\n  const ca = ((c >> 24) & 255) / 255;\n  return rgbaToInt(cr, cg, cb, ca, bgColor);\n};\n\nconst int2hsv = (cInt) => {\n  cInt = intToColor(cInt).substr(1);\n  const r = parseInt(cInt.substr(0, 2), 16) / 255;\n  const g = parseInt(cInt.substr(2, 2), 16) / 255;\n  const b = parseInt(cInt.substr(4, 2), 16) / 255;\n  let v = Math.max(r, g, b),\n    c = v - Math.min(r, g, b);\n  let h =\n    c && (v === r ? (g - b) / c : v === g ? 2 + (b - r) / c : 4 + (r - g) / c);\n  return [60 * (h < 0 ? h + 6 : h), v && c / v, v];\n};\nconst transparentColor = (c, a) =>\n  `rgba(${c >> 16}, ${(c >> 8) & 0xff}, ${c & 0xff}, ${a})`;\nconst generateGamma = (hue) => {\n  const gammaColors = [];\n  for (let i = 0; i < MaxNumColors; ++i) {\n    gammaColors.push(`hsl(${hue}, 100%, ${(100 * i) / (MaxNumColors - 1)}%)`);\n  }\n  return gammaColors;\n};\nconst decodeLine = (line) => {\n  let buf = Buffer.from(line, \"base64\");\n  if (buf.length !== ExpectedLineLength) {\n    throw new Error(\"Unexpected encoded line length\");\n  }\n  let pixels = [];\n  for (let i = 4; i < buf.length; i += 8) {\n    let color = buf.readUInt32LE(i);\n    let ownerIndex = buf.readUInt32LE(i + 4);\n    pixels.push({\n      color,\n      ownerIndex,\n    });\n  }\n  return pixels;\n};\n\nconst WeaponsCheat = \"idkfa\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const colors = [\n      \"#000000\",\n      \"#666666\",\n      \"#aaaaaa\",\n      \"#FFFFFF\",\n      \"#F44E3B\",\n      \"#D33115\",\n      \"#9F0500\",\n      \"#FE9200\",\n      \"#E27300\",\n      \"#C45100\",\n      \"#FCDC00\",\n      \"#FCC400\",\n      \"#FB9E00\",\n      \"#DBDF00\",\n      \"#B0BC00\",\n      \"#808900\",\n      \"#A4DD00\",\n      \"#68BC00\",\n      \"#194D33\",\n      \"#68CCCA\",\n      \"#16A5A5\",\n      \"#0C797D\",\n      \"#73D8FF\",\n      \"#009CE0\",\n      \"#0062B1\",\n      \"#AEA1FF\",\n      \"#7B64FF\",\n      \"#653294\",\n      \"#FDA1FF\",\n      \"#FA28FF\",\n      \"#AB149E\",\n    ].map((c) => c.toLowerCase());\n    // const currentColor = parseInt(colors[Math.floor(Math.random() * colors.length)].substring(1), 16);\n    const currentColor = parseInt(colors[0].substring(1), 16);\n    const defaultAlpha = 0.25;\n\n    const timeMs = new Date().getTime();\n    const freeDrawingStartMsEstimated =\n      timeMs -\n      ((timeMs - new Date(\"2021-05-09\")) % (7 * OneDayMs)) +\n      OneDayMs * 6;\n\n    this.state = {\n      connected: false,\n      signedIn: false,\n      accountId: null,\n      pendingPixels: 0,\n      boardLoaded: false,\n      selectedCell: null,\n      alpha: defaultAlpha,\n      currentColor,\n      pickerColor: intToColorWithAlpha(currentColor, defaultAlpha),\n      colors,\n      gammaColors: generateGamma(0),\n      pickingColor: false,\n      owners: [],\n      accounts: {},\n      highlightedAccountIndex: -1,\n      selectedOwnerIndex: false,\n      farmingBanana: false,\n      weaponsOn: false,\n      weaponsCodePosition: 0,\n      freeDrawingStart: new Date(freeDrawingStartMsEstimated),\n      freeDrawingEnd: new Date(freeDrawingStartMsEstimated + OneDayMs),\n      watchMode: false,\n    };\n\n    this._buttonDown = false;\n    this._oldCounts = {};\n    this._numFailedTxs = 0;\n    this._balanceRefreshTimer = null;\n    this.canvasRef = React.createRef();\n    this._context = false;\n    this._lines = false;\n    this._queue = [];\n    this._pendingPixels = [];\n    this._refreshBoardTimer = null;\n    this._sendQueueTimer = null;\n    this._stopRefreshTime = new Date().getTime() + MaxWorkTime;\n    this._accounts = {};\n\n    this._initNear().then(() => {\n      this.setState({\n        connected: true,\n        signedIn: !!this._accountId,\n        accountId: this._accountId,\n        ircAccountId: this._accountId.replace(\".\", \"_\"),\n        freeDrawingStart: this._freeDrawingStart,\n        freeDrawingEnd: this._freeDrawingEnd,\n      });\n    });\n  }\n\n  componentDidMount() {\n    const canvas = this.canvasRef.current;\n    this._context = canvas.getContext(\"2d\");\n\n    const click = async () => {\n      if (this.state.watchMode) {\n        return;\n      }\n      if (this.state.rendering) {\n        await this.drawImg(this.state.selectedCell);\n      } else if (this.state.pickingColor) {\n        this.pickColor(this.state.selectedCell);\n      } else {\n        this.saveColor();\n        await this.drawPixel(this.state.selectedCell);\n      }\n    };\n\n    const mouseMove = (e) => {\n      let x, y;\n      if (\"touches\" in e) {\n        if (e.touches.length > 1) {\n          return true;\n        } else {\n          const rect = e.target.getBoundingClientRect();\n          x = e.targetTouches[0].clientX - rect.left;\n          y = e.targetTouches[0].clientY - rect.top;\n        }\n      } else {\n        x = e.offsetX;\n        y = e.offsetY;\n      }\n      x = Math.trunc((x / e.target.clientWidth) * BoardWidth);\n      y = Math.trunc((y / e.target.clientHeight) * BoardWidth);\n      let cell = null;\n      if (x >= 0 && x < BoardWidth && y >= 0 && y < BoardHeight) {\n        cell = { x, y };\n      }\n      if (JSON.stringify(cell) !== JSON.stringify(this.state.selectedCell)) {\n        this.setState(\n          {\n            selectedCell: cell,\n            selectedOwnerIndex:\n              this._lines &&\n              cell &&\n              this._lines[cell.y] &&\n              this._lines[cell.y][cell.x].ownerIndex,\n          },\n          async () => {\n            this.renderCanvas();\n            if (this.state.selectedCell !== null && this._buttonDown) {\n              await click();\n            }\n          }\n        );\n      }\n      e.preventDefault();\n      return false;\n    };\n\n    canvas.addEventListener(\"mousemove\", mouseMove);\n    canvas.addEventListener(\"touchmove\", mouseMove);\n\n    const mouseDown = async (e) => {\n      this._buttonDown = true;\n      if (this.state.selectedCell !== null) {\n        await click();\n      }\n    };\n\n    canvas.addEventListener(\"mousedown\", mouseDown);\n    canvas.addEventListener(\"touchstart\", mouseDown);\n\n    const unselectCell = () => {\n      this.setState(\n        {\n          selectedCell: null,\n        },\n        () => this.renderCanvas()\n      );\n    };\n\n    const mouseUp = async (e) => {\n      this._buttonDown = false;\n      if (\"touches\" in e) {\n        unselectCell();\n      }\n    };\n\n    canvas.addEventListener(\"mouseup\", mouseUp);\n    canvas.addEventListener(\"touchend\", mouseUp);\n\n    canvas.addEventListener(\"mouseleave\", unselectCell);\n\n    canvas.addEventListener(\"mouseenter\", (e) => {\n      if (this._buttonDown) {\n        if (!(\"touches\" in e) && !(e.buttons & 1)) {\n          this._buttonDown = false;\n        }\n      }\n    });\n\n    document.addEventListener(\"keydown\", (e) => {\n      e.altKey && this.enablePickColor();\n    });\n\n    document.addEventListener(\"keyup\", (e) => {\n      if (this.state.weaponsCodePosition < WeaponsCheat.length) {\n        if (\n          e.key.toLowerCase() === WeaponsCheat[this.state.weaponsCodePosition]\n        ) {\n          this.setState({\n            weaponsCodePosition: this.state.weaponsCodePosition + 1,\n            weaponsOn:\n              this.state.weaponsCodePosition + 1 === WeaponsCheat.length,\n          });\n        } else {\n          this.setState({\n            weaponsCodePosition: 0,\n          });\n        }\n      }\n      !e.altKey && this.disablePickColor();\n    });\n  }\n\n  enablePickColor() {\n    this.setState(\n      {\n        pickingColor: true,\n      },\n      () => {\n        this.renderCanvas();\n      }\n    );\n  }\n\n  disablePickColor() {\n    this.setState(\n      {\n        pickingColor: false,\n      },\n      () => {\n        this.renderCanvas();\n      }\n    );\n  }\n\n  pickColor(cell) {\n    if (!this.state.signedIn || !this._lines || !this._lines[cell.y]) {\n      return;\n    }\n    const color = this._lines[cell.y][cell.x].color;\n\n    this.setState(\n      {\n        currentColor: color,\n        alpha: 1,\n        pickerColor: intToColorWithAlpha(color, 1),\n        gammaColors: generateGamma(int2hsv(color)[0]),\n        pickingColor: false,\n      },\n      () => {\n        this.renderCanvas();\n      }\n    );\n  }\n\n  async _sendQueue() {\n    const pixels = this._queue.slice(0, BatchOfPixels);\n    this._queue = this._queue.slice(BatchOfPixels);\n    this._pendingPixels = pixels;\n\n    try {\n      await this._contract.draw(\n        {\n          pixels,\n        },\n        new BN(\"75000000000000\")\n      );\n      this._numFailedTxs = 0;\n    } catch (error) {\n      console.log(\"Failed to send a transaction\", error);\n      this._numFailedTxs += 1;\n      if (this._numFailedTxs < 3) {\n        this._queue = this._queue.concat(this._pendingPixels);\n        this._pendingPixels = [];\n      } else {\n        this._pendingPixels = [];\n        this._queue = [];\n      }\n    }\n    try {\n      await Promise.all([this.refreshBoard(true), this.refreshAccountStats()]);\n    } catch (e) {\n      // ignore\n    }\n    this._pendingPixels.forEach((p) => {\n      if (this._pending[p.y][p.x] === p.color) {\n        this._pending[p.y][p.x] = -1;\n      }\n    });\n    this._pendingPixels = [];\n  }\n\n  async _pingQueue(ready) {\n    if (this._sendQueueTimer) {\n      clearTimeout(this._sendQueueTimer);\n      this._sendQueueTimer = null;\n    }\n\n    if (\n      this._pendingPixels.length === 0 &&\n      (this._queue.length >= BatchOfPixels || ready)\n    ) {\n      await this._sendQueue();\n    }\n    if (this._queue.length > 0) {\n      this._sendQueueTimer = setTimeout(async () => {\n        await this._pingQueue(true);\n      }, BatchTimeout);\n    }\n  }\n\n  async drawImg(cell) {\n    if (!this.state.signedIn || !this._lines || !this._lines[cell.y]) {\n      return;\n    }\n    const balance = this.state.account ? this.state.account.avocadoBalance : 0;\n\n    if (\n      !this._isFreeDrawing() &&\n      balance - this.state.pendingPixels < this.state.avocadoNeeded\n    ) {\n      return;\n    }\n\n    const img = this.imageData;\n    const w = img.width;\n    const h = img.height;\n    const x = cell.x - Math.trunc(w / 2);\n    const y = cell.y - Math.trunc(h / 2);\n    const d = new Uint32Array(this.imageData.data.buffer);\n    for (let i = 0; i < h; ++i) {\n      for (let j = 0; j < w; ++j) {\n        const imgColor = d[i * w + j];\n        if (\n          imgColor &&\n          y + i >= 0 &&\n          y + i < BoardHeight &&\n          x + j >= 0 &&\n          x + j < BoardWidth\n        ) {\n          const bgColor = this._lines[y + i]\n            ? this._lines[y + i][x + j].color\n            : 0;\n          const color = imgColorToInt(imgColor, bgColor);\n          if (color !== bgColor) {\n            this._queue.push({\n              x: x + j,\n              y: y + i,\n              color,\n            });\n          }\n        }\n      }\n    }\n    this.setState({\n      rendering: false,\n    });\n\n    this._stopRefreshTime = new Date().getTime() + MaxWorkTime;\n    await this._pingQueue(false);\n  }\n\n  async drawPixel(cell) {\n    if (!this.state.signedIn || !this._lines || !this._lines[cell.y]) {\n      return;\n    }\n    const balance = this.state.account ? this.state.account.avocadoBalance : 0;\n    if (!this._isFreeDrawing() && balance - this.state.pendingPixels < 1) {\n      return;\n    }\n\n    const bgColor = this._lines[cell.y] ? this._lines[cell.y][cell.x].color : 0;\n    const cb = this.state.currentColor & 255;\n    const cg = (this.state.currentColor >> 8) & 255;\n    const cr = (this.state.currentColor >> 16) & 255;\n    const color = rgbaToInt(cr, cg, cb, this.state.alpha, bgColor);\n\n    if (\n      this._pending[cell.y][cell.x] !== color &&\n      this._lines[cell.y][cell.x].color !== color\n    ) {\n      this._pending[cell.y][cell.x] = color;\n    } else {\n      return;\n    }\n\n    this._queue.push({\n      x: cell.x,\n      y: cell.y,\n      color,\n    });\n\n    this._stopRefreshTime = new Date().getTime() + MaxWorkTime;\n    await this._pingQueue(false);\n  }\n\n  parseAccount(account, accountId) {\n    if (!account) {\n      account = {\n        accountId,\n        accountIndex: -1,\n        avocadoBalance: 25.0,\n        bananaBalance: 0.0,\n        numPixels: 0,\n        farmingPreference: Berry.Avocado,\n      };\n    } else {\n      account = {\n        accountId: account.account_id,\n        accountIndex: account.account_index,\n        avocadoBalance: parseFloat(account.avocado_balance) / this._pixelCost,\n        bananaBalance: parseFloat(account.banana_balance) / this._pixelCost,\n        numPixels: account.num_pixels,\n        farmingPreference: account.farming_preference,\n      };\n    }\n    account.startTime = new Date().getTime();\n    account.avocadoPixels =\n      account.farmingPreference === Berry.Avocado ? account.numPixels + 1 : 0;\n    account.bananaPixels =\n      account.farmingPreference === Berry.Banana ? account.numPixels : 0;\n    account.avocadoRewardPerMs = account.avocadoPixels / (24 * 60 * 60 * 1000);\n    account.bananaRewardPerMs = account.bananaPixels / (24 * 60 * 60 * 1000);\n    return account;\n  }\n\n  async getAccount(accountId) {\n    return this.parseAccount(\n      await this._contract.get_account({ account_id: accountId }),\n      accountId\n    );\n  }\n\n  async getAccountByIndex(accountIndex) {\n    return this.parseAccount(\n      await this._contract.get_account_by_index({\n        account_index: accountIndex,\n      }),\n      \"unknown\"\n    );\n  }\n\n  async refreshAccountStats() {\n    let account = await this.getAccount(this._accountId);\n    if (this._balanceRefreshTimer) {\n      clearInterval(this._balanceRefreshTimer);\n      this._balanceRefreshTimer = null;\n    }\n\n    this.setState({\n      pendingPixels: this._pendingPixels.length + this._queue.length,\n      farmingBanana: account.farmingPreference === Berry.Banana,\n      account,\n    });\n\n    this._balanceRefreshTimer = setInterval(() => {\n      const t = new Date().getTime() - account.startTime;\n      this.setState({\n        account: Object.assign({}, account, {\n          avocadoBalance:\n            account.avocadoBalance + t * account.avocadoRewardPerMs,\n          bananaBalance: account.bananaBalance + t * account.bananaRewardPerMs,\n        }),\n        pendingPixels: this._pendingPixels.length + this._queue.length,\n      });\n    }, 100);\n  }\n\n  async _initNear() {\n    const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n    const near = await nearAPI.connect(\n      Object.assign({ deps: { keyStore } }, NearConfig)\n    );\n    this._keyStore = keyStore;\n    this._near = near;\n\n    this._walletConnection = new nearAPI.WalletConnection(\n      near,\n      NearConfig.contractName\n    );\n    this._accountId = this._walletConnection.getAccountId();\n\n    this._account = this._walletConnection.account();\n    this._contract = new nearAPI.Contract(\n      this._account,\n      NearConfig.contractName,\n      {\n        viewMethods: [\n          \"get_account\",\n          \"get_account_by_index\",\n          \"get_lines\",\n          \"get_line_versions\",\n          \"get_pixel_cost\",\n          \"get_account_balance\",\n          \"get_account_num_pixels\",\n          \"get_account_id_by_index\",\n          \"get_free_drawing_timestamp\",\n        ],\n        changeMethods: [\"draw\", \"buy_tokens\", \"select_farming_preference\"],\n      }\n    );\n    this._pixelCost = parseFloat(await this._contract.get_pixel_cost());\n    const freeDrawingTimestamp = await this._contract.get_free_drawing_timestamp();\n    this._freeDrawingStart = new Date(freeDrawingTimestamp);\n    this._freeDrawingEnd = new Date(freeDrawingTimestamp + OneDayMs);\n    if (this._accountId) {\n      await this.refreshAccountStats();\n    }\n    this._lineVersions = Array(BoardHeight).fill(-1);\n    this._lines = Array(BoardHeight).fill(false);\n    this._pending = Array(BoardHeight).fill(false);\n    this._pending.forEach((v, i, a) => (a[i] = Array(BoardWidth).fill(-1)));\n    await this.refreshBoard(true);\n  }\n\n  async refreshBoard(forced) {\n    if (this._refreshBoardTimer) {\n      clearTimeout(this._refreshBoardTimer);\n      this._refreshBoardTimer = null;\n    }\n    const t = new Date().getTime();\n    if (this.state.watchMode || t < this._stopRefreshTime) {\n      this._refreshBoardTimer = setTimeout(async () => {\n        await this.refreshBoard(false);\n      }, RefreshBoardTimeout);\n    }\n\n    if (!forced && document.hidden) {\n      return;\n    }\n\n    let lineVersions = await this._contract.get_line_versions();\n    let needLines = [];\n    for (let i = 0; i < BoardHeight; ++i) {\n      if (lineVersions[i] !== this._lineVersions[i]) {\n        needLines.push(i);\n      }\n    }\n    let requestLines = [];\n    for (let i = 0; i < needLines.length; i += NumLinesPerFetch) {\n      requestLines.push(needLines.slice(i, i + NumLinesPerFetch));\n    }\n\n    let results = await Promise.all(\n      requestLines.map((lines) => this._contract.get_lines({ lines }))\n    );\n    results = results.flat();\n    requestLines = requestLines.flat();\n    for (let i = 0; i < requestLines.length; ++i) {\n      let lineIndex = requestLines[i];\n      let line = decodeLine(results[i]);\n      this._lines[lineIndex] = line;\n    }\n\n    this._lineVersions = lineVersions;\n    this._refreshOwners();\n    this.renderCanvas();\n  }\n\n  _refreshOwners() {\n    const counts = {};\n    this._lines.flat().forEach((cell) => {\n      counts[cell.ownerIndex] = (counts[cell.ownerIndex] || 0) + 1;\n    });\n    delete counts[0];\n    const sortedKeys = Object.keys(counts).sort(\n      (a, b) => counts[b] - counts[a]\n    );\n    this.setState({\n      owners: sortedKeys.map((accountIndex) => {\n        accountIndex = parseInt(accountIndex);\n        return {\n          accountIndex,\n          numPixels: counts[accountIndex],\n        };\n      }),\n    });\n    sortedKeys.forEach(async (accountIndex) => {\n      accountIndex = parseInt(accountIndex);\n      if (\n        !(accountIndex in this._accounts) ||\n        counts[accountIndex] !== (this._oldCounts[accountIndex] || 0)\n      ) {\n        try {\n          this._accounts[accountIndex] = await this.getAccountByIndex(\n            accountIndex\n          );\n        } catch (err) {\n          console.log(\"Failed to fetch account index #\", accountIndex, err);\n        }\n        this.setState({\n          accounts: Object.assign({}, this._accounts),\n        });\n      }\n    });\n    this.setState({\n      accounts: Object.assign({}, this._accounts),\n    });\n    this._oldCounts = counts;\n  }\n\n  renderCanvas() {\n    if (!this._context || !this._lines) {\n      return;\n    }\n\n    const ctx = this._context;\n\n    for (let i = 0; i < BoardHeight; ++i) {\n      const line = this._lines[i];\n      if (!line) {\n        continue;\n      }\n      for (let j = 0; j < BoardWidth; ++j) {\n        const p = line[j];\n        ctx.fillStyle = intToColor(p.color);\n        ctx.fillRect(j * CellWidth, i * CellHeight, CellWidth, CellHeight);\n        if (this.state.highlightedAccountIndex >= 0) {\n          if (p.ownerIndex !== this.state.highlightedAccountIndex) {\n            ctx.fillStyle = \"rgba(32, 32, 32, 0.8)\";\n            ctx.fillRect(\n              j * CellWidth,\n              i * CellHeight,\n              CellWidth / 2,\n              CellHeight / 2\n            );\n            ctx.fillRect(\n              (j + 0.5) * CellWidth,\n              (i + 0.5) * CellHeight,\n              CellWidth / 2,\n              CellHeight / 2\n            );\n            ctx.fillStyle = \"rgba(0, 0, 0, 0.8)\";\n            ctx.fillRect(\n              j * CellWidth,\n              (i + 0.5) * CellHeight,\n              CellWidth / 2,\n              CellHeight / 2\n            );\n            ctx.fillRect(\n              (j + 0.5) * CellWidth,\n              i * CellHeight,\n              CellWidth / 2,\n              CellHeight / 2\n            );\n          } else {\n            ctx.beginPath();\n            ctx.strokeStyle = ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n            ctx.lineWidth = 0.5;\n            ctx.rect(\n              j * CellWidth + 0.5,\n              i * CellHeight + 0.5,\n              CellWidth - 1,\n              CellHeight - 1\n            );\n            ctx.stroke();\n            ctx.closePath();\n          }\n        }\n      }\n    }\n\n    this._pendingPixels.concat(this._queue).forEach((p) => {\n      ctx.fillStyle = intToColor(p.color);\n      ctx.fillRect(p.x * CellWidth, p.y * CellHeight, CellWidth, CellHeight);\n    });\n\n    if (this.state.selectedCell && !this.state.watchMode) {\n      const c = this.state.selectedCell;\n      if (this.state.rendering) {\n        const img = this.imageData;\n        const w = img.width;\n        const h = img.height;\n        const x = c.x - Math.trunc(w / 2);\n        const y = c.y - Math.trunc(h / 2);\n        const d = new Uint32Array(this.imageData.data.buffer);\n        for (let i = 0; i < h; ++i) {\n          for (let j = 0; j < w; ++j) {\n            const color = d[i * w + j];\n            if (\n              color &&\n              y + i >= 0 &&\n              y + i < BoardHeight &&\n              x + j >= 0 &&\n              x + j < BoardWidth\n            ) {\n              const bgColor = this._lines[y + i]\n                ? this._lines[y + i][x + j].color\n                : 0;\n              ctx.fillStyle = intToColor(imgColorToInt(color, bgColor));\n              ctx.fillRect(\n                (x + j) * CellWidth,\n                (y + i) * CellHeight,\n                CellWidth,\n                CellHeight\n              );\n            }\n          }\n        }\n      } else if (this.state.pickingColor) {\n        const color = this._lines[c.y] ? this._lines[c.y][c.x].color : 0;\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = transparentColor(color, 0.5);\n        ctx.lineWidth = CellWidth * 4;\n        ctx.arc(\n          (c.x + 0.5) * CellWidth,\n          (c.y + 0.5) * CellHeight,\n          CellWidth * 4,\n          0,\n          2 * Math.PI\n        );\n        ctx.stroke();\n        ctx.closePath();\n\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = transparentColor(color, 1);\n        ctx.lineWidth = CellWidth * 2;\n        ctx.arc(\n          (c.x + 0.5) * CellWidth,\n          (c.y + 0.5) * CellHeight,\n          CellWidth * 4,\n          0,\n          2 * Math.PI\n        );\n        ctx.stroke();\n        ctx.closePath();\n      } else {\n        ctx.fillStyle = transparentColor(this.state.currentColor, 0.2);\n        ctx.fillRect(c.x * CellWidth, 0, CellWidth, c.y * CellHeight);\n        ctx.fillRect(\n          c.x * CellWidth,\n          (c.y + 1) * CellHeight,\n          CellWidth,\n          (BoardHeight - c.y - 1) * CellHeight\n        );\n        ctx.fillRect(0, c.y * CellHeight, c.x * CellWidth, CellHeight);\n        ctx.fillRect(\n          (c.x + 1) * CellWidth,\n          c.y * CellHeight,\n          (BoardWidth - c.x - 1) * CellWidth,\n          CellHeight\n        );\n\n        ctx.beginPath();\n        ctx.lineWidth = 3;\n        ctx.fillStyle = intToColor(this.state.currentColor);\n        ctx.strokeStyle = intToColor(this.state.currentColor);\n        ctx.rect(c.x * CellWidth, c.y * CellHeight, CellWidth, CellHeight);\n        ctx.stroke();\n        ctx.closePath();\n      }\n    }\n\n    if (!this.state.boardLoaded) {\n      this.setState({\n        boardLoaded: true,\n      });\n    }\n  }\n\n  async requestSignIn() {\n    const appTitle = \"Berry Club\";\n    await this._walletConnection.requestSignIn(\n      NearConfig.contractName,\n      appTitle\n    );\n  }\n\n  async logOut() {\n    this._walletConnection.signOut();\n    this._accountId = null;\n    this.setState({\n      signedIn: !!this._accountId,\n      accountId: this._accountId,\n    });\n  }\n\n  async alphaColorChange(c) {\n    this.setState(\n      {\n        alpha: c.rgb.a,\n      },\n      () => {\n        this.changeColor(c, c.rgb.a);\n      }\n    );\n  }\n\n  hueColorChange(c) {\n    this.setState({\n      gammaColors: generateGamma(c.hsl.h),\n    });\n    this.changeColor(c);\n  }\n\n  saveColor() {\n    const newColor = intToColor(this.state.currentColor);\n    const index = this.state.colors.indexOf(newColor);\n    if (index >= 0) {\n      this.state.colors.splice(index, 1);\n    }\n    this.setState({\n      colors: [newColor].concat(this.state.colors).slice(0, MaxNumColors),\n    });\n  }\n\n  changeColor(c, alpha) {\n    alpha = alpha || 1.0;\n    const currentColor = c.rgb.r * 0x010000 + c.rgb.g * 0x000100 + c.rgb.b;\n    c.hex = intToColorWithAlpha(currentColor, alpha);\n    c.rgb.a = alpha;\n    c.hsl.a = alpha;\n    c.hsv.a = alpha;\n    this.setState(\n      {\n        pickerColor: c,\n        alpha,\n        currentColor,\n      },\n      () => {\n        this.renderCanvas();\n      }\n    );\n  }\n\n  async buyTokens(amount) {\n    const requiredBalance = PixelPrice.muln(amount);\n    await this._contract.buy_tokens(\n      {},\n      new BN(\"30000000000000\"),\n      requiredBalance\n    );\n  }\n\n  setHover(accountIndex, v) {\n    if (v) {\n      this.setState(\n        {\n          highlightedAccountIndex: accountIndex,\n        },\n        () => {\n          this.renderCanvas();\n        }\n      );\n    } else if (this.state.highlightedAccountIndex === accountIndex) {\n      this.setState(\n        {\n          highlightedAccountIndex: -1,\n        },\n        () => {\n          this.renderCanvas();\n        }\n      );\n    }\n  }\n\n  async switchBerry(farmingBanana) {\n    this.setState({\n      farmingBanana,\n    });\n    await this._contract.select_farming_preference({\n      berry: farmingBanana ? Berry.Banana : Berry.Avocado,\n    });\n    await this.refreshAccountStats();\n  }\n\n  async renderImg(img, avocadoNeeded) {\n    this.imageData = img;\n    this.setState({\n      weaponsOn: false,\n      weaponsCodePosition: 0,\n      rendering: true,\n      pickingColor: false,\n      avocadoNeeded,\n    });\n  }\n\n  _isFreeDrawing() {\n    const date = new Date();\n    return (\n      this.state.freeDrawingStart <= date && date < this.state.freeDrawingEnd\n    );\n  }\n\n  render() {\n    const watchClass = this.state.watchMode ? \" hidden\" : \"\";\n    const isFreeDrawing = this._isFreeDrawing();\n    const freeDrawing = (\n      <div\n        className={`free-drawing ${\n          isFreeDrawing ? \"free\" : \"wait\"\n        }${watchClass}`}\n      >\n        {isFreeDrawing\n          ? \"BANANZA!!! Draw for free \"\n          : \"Time until free drawing \"}\n        <Timer\n          initialTime={\n            isFreeDrawing\n              ? this.state.freeDrawingEnd - new Date()\n              : this.state.freeDrawingStart - new Date()\n          }\n          direction=\"backward\"\n          timeToUpdate={100}\n          lastUnit=\"d\"\n          checkpoints={[\n            {\n              time: 0,\n            },\n          ]}\n        >\n          {() => (\n            <React.Fragment>\n              <Timer.Days\n                formatValue={(v) => (v > 1 ? `${v} days ` : v ? `1 day ` : \"\")}\n              />\n              <Timer.Hours />:\n              <Timer.Minutes formatValue={(v) => `${v}`.padStart(2, \"0\")} />:\n              <Timer.Seconds formatValue={(v) => `${v}`.padStart(2, \"0\")} />.\n              <Timer.Milliseconds\n                formatValue={(v) => `${v}`.padStart(3, \"0\")}\n              />\n            </React.Fragment>\n          )}\n        </Timer>\n      </div>\n    );\n\n    const content = !this.state.connected ? (\n      <div>\n        Connecting...{\" \"}\n        <span\n          className=\"spinner-grow spinner-grow-sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        />\n      </div>\n    ) : this.state.signedIn ? (\n      <div>\n        <div className={`float-right${watchClass}`}>\n          <button\n            className=\"btn btn-outline-secondary\"\n            onClick={() => this.logOut()}\n          >\n            Log out ({this.state.accountId})\n          </button>\n        </div>\n        {freeDrawing}\n        <div className={`your-balance${watchClass}`}>\n          Balance:{\" \"}\n          <Balance\n            account={this.state.account}\n            pendingPixels={this.state.pendingPixels}\n            isFreeDrawing={isFreeDrawing}\n            detailed={true}\n          />\n          <div>\n            Farming preference:\n            <Switch\n              onChange={(e) => this.switchBerry(e)}\n              checked={this.state.farmingBanana}\n              className=\"react-switch\"\n              height={30}\n              width={70}\n              offColor=\"#666\"\n              onColor=\"#666\"\n              uncheckedIcon={\n                <div className=\"switch-berry avocado\">{Avocado}</div>\n              }\n              checkedIcon={<div className=\"switch-berry banana\">{Banana}</div>}\n            />\n          </div>\n        </div>\n        <div className={`buttons${watchClass}`}>\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => this.buyTokens(10)}\n          >\n            Buy <span className=\"font-weight-bold\">25{Avocado}</span> for{\" \"}\n            <span className=\"font-weight-bold\">Ⓝ0.1</span>\n          </button>{\" \"}\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => this.buyTokens(40)}\n          >\n            Buy <span className=\"font-weight-bold\">100{Avocado}</span> for{\" \"}\n            <span className=\"font-weight-bold\">Ⓝ0.4</span>\n          </button>{\" \"}\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => this.buyTokens(100)}\n          >\n            Buy <span className=\"font-weight-bold\">250{Avocado}</span> for{\" \"}\n            <span className=\"font-weight-bold\">Ⓝ1</span>\n          </button>{\" \"}\n          <button\n            className=\"btn btn-success\"\n            onClick={() => this.buyTokens(500)}\n          >\n            DEAL: Buy <span className=\"font-weight-bold\">1500{Avocado}</span>{\" \"}\n            for <span className=\"font-weight-bold\">Ⓝ5</span>\n          </button>\n        </div>\n        <div className={`color-picker${watchClass}`}>\n          <HuePicker\n            color={this.state.pickerColor}\n            width=\"100%\"\n            onChange={(c) => this.hueColorChange(c)}\n          />\n          <AlphaPicker\n            color={this.state.pickerColor}\n            width=\"100%\"\n            onChange={(c) => this.alphaColorChange(c)}\n          />\n          <div\n            className={this.state.alpha >= 0.75 ? \"display-warning\" : \"hidden\"}\n          >\n            <span role=\"img\" aria-label=\"warning\">\n              ⚠️\n            </span>\n            ️ Please! Don't destroy art! If you just want to farm {Banana}, just\n            draw with low opacity.\n            <span role=\"img\" aria-label=\"pray\">\n              🙏\n            </span>\n            ️\n          </div>\n          <GithubPicker\n            className=\"circle-picker\"\n            colors={this.state.gammaColors}\n            color={this.state.pickerColor}\n            triangle=\"hide\"\n            width=\"100%\"\n            onChangeComplete={(c) => this.changeColor(c)}\n          />\n          <GithubPicker\n            className=\"circle-picker\"\n            colors={this.state.colors}\n            color={this.state.pickerColor}\n            triangle=\"hide\"\n            width=\"100%\"\n            onChangeComplete={(c) => this.hueColorChange(c)}\n          />\n        </div>\n      </div>\n    ) : (\n      <div style={{ marginBottom: \"10px\" }}>\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => this.requestSignIn()}\n        >\n          Log in with NEAR Wallet\n        </button>\n      </div>\n    );\n    const weapons = this.state.weaponsOn ? (\n      <div>\n        <Weapons\n          account={this.state.account}\n          isFreeDrawing={isFreeDrawing}\n          renderIt={(img, avocadoNeeded) => this.renderImg(img, avocadoNeeded)}\n          enableWatchMode={() => {\n            this.setState({\n              watchMode: true,\n              weaponsOn: false,\n              weaponsCodePosition: 0,\n            });\n            document.body.style.backgroundColor = \"#333\";\n          }}\n        />\n      </div>\n    ) : (\n      \"\"\n    );\n    return (\n      <div>\n        <div className={`header${watchClass}`}>\n          <h2>\n            {Avocado} Berry Club {Banana}\n          </h2>{\" \"}\n          <a className=\"btn btn-outline-none\" href=\"https://farm.berryclub.io\">\n            Berry Farm {Cucumber}\n          </a>\n          <a\n            className=\"btn btn-outline-none\"\n            href=\"https://app.ref.finance/#wrap.near|berryclub.ek.near\"\n          >\n            REF Finance {Banana}\n          </a>\n          <a className=\"btn btn-outline-none\" href=\"https://berry.cards\">\n            [BETA] Berry Cards {Pepper}\n          </a>\n          {content}\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div>\n              <div>\n                <canvas\n                  ref={this.canvasRef}\n                  width={600}\n                  height={600}\n                  className={\n                    this.state.boardLoaded\n                      ? `pixel-board${\n                          this.state.watchMode ? \" watch-mode\" : \"\"\n                        }`\n                      : \"pixel-board c-animated-background\"\n                  }\n                />\n              </div>\n            </div>\n            <div className={`leaderboard${watchClass}`}>\n              <div>\n                <Leaderboard\n                  owners={this.state.owners}\n                  accounts={this.state.accounts}\n                  setHover={(accountIndex, v) => this.setHover(accountIndex, v)}\n                  selectedOwnerIndex={this.state.selectedOwnerIndex}\n                  highlightedAccountIndex={this.state.highlightedAccountIndex}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={`padded${watchClass}`}>\n          {this.state.signedIn ? (\n            <div>\n              <iframe\n                title=\"irc\"\n                className=\"irc\"\n                frameBorder=\"0\"\n                src={`https://kiwiirc.com/client/irc.kiwiirc.com/?nick=${this.state.ircAccountId}#berryclub`}\n              />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className={`padded${watchClass}`}>\n          <div className=\"video-container\">\n            <iframe\n              title=\"youtube3\"\n              className=\"youtube\"\n              src=\"https://www.youtube.com/embed/wfTa-Kgw2DM\"\n              frameBorder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n            />\n          </div>\n        </div>\n        <div className={`padded${watchClass}`}>\n          <div className=\"video-container\">\n            <iframe\n              title=\"youtube2\"\n              className=\"youtube\"\n              src=\"https://www.youtube.com/embed/PYF6RWd7ZgI\"\n              frameBorder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n            />\n          </div>\n        </div>\n        <div className={`padded${watchClass}`}>\n          <div className=\"video-container\">\n            <iframe\n              title=\"youtube\"\n              className=\"youtube\"\n              src=\"https://www.youtube.com/embed/lMSWhCwstLo\"\n              frameBorder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n            />\n          </div>\n        </div>\n        {weapons}\n        <a\n          className={`github-fork-ribbon right-bottom fixed${watchClass}`}\n          href=\"https://github.com/evgenykuzyakov/berryclub\"\n          data-ribbon=\"Fork me on GitHub\"\n          title=\"Fork me on GitHub\"\n        >\n          Fork me on GitHub\n        </a>\n      </div>\n    );\n  }\n}\n\nconst Balance = (props) => {\n  const account = props.account;\n  if (!account) {\n    return \"\";\n  }\n  const fraction = props.detailed ? 3 : 1;\n  const avacadoBalance =\n    account.avocadoBalance -\n    (props.isFreeDrawing ? 0 : props.pendingPixels || 0);\n  const avocadoFarm =\n    account.avocadoPixels > 0 ? (\n      <span>\n        {\"(+\"}\n        <span className=\"font-weight-bold\">{account.avocadoPixels}</span>\n        {Avocado}\n        {\"/day)\"}\n      </span>\n    ) : (\n      \"\"\n    );\n  const bananaFarm =\n    account.bananaPixels > 0 ? (\n      <span>\n        {\"(+\"}\n        <span className=\"font-weight-bold\">{account.bananaPixels}</span>\n        {Banana}\n        {\"/day)\"}\n      </span>\n    ) : (\n      \"\"\n    );\n  return (\n    <span className=\"balances font-small\">\n      <span className=\"font-weight-bold\">\n        {avacadoBalance.toFixed(fraction)}\n      </span>\n      {Avocado}{\" \"}\n      <span className=\"font-weight-bold\">\n        {account.bananaBalance.toFixed(fraction)}\n      </span>\n      {Banana} {avocadoFarm}\n      {bananaFarm}\n      {props.pendingPixels ? <span> ({props.pendingPixels} pending)</span> : \"\"}\n    </span>\n  );\n};\n\nconst Leaderboard = (props) => {\n  const owners = props.owners.map((owner) => {\n    if (owner.accountIndex in props.accounts) {\n      owner.account = props.accounts[owner.accountIndex];\n    }\n    return (\n      <Owner\n        key={owner.accountIndex}\n        {...owner}\n        isSelected={owner.accountIndex === props.selectedOwnerIndex}\n        setHover={(v) => props.setHover(owner.accountIndex, v)}\n        isHighlighted={owner.accountIndex === props.highlightedAccountIndex}\n      />\n    );\n  });\n  return (\n    <table className=\"table table-hover table-sm\">\n      <tbody>{owners}</tbody>\n    </table>\n  );\n};\n\nconst Owner = (props) => {\n  const account = props.account;\n  return (\n    <tr\n      onMouseEnter={() => props.setHover(true)}\n      onMouseLeave={() => props.setHover(false)}\n      className={props.isSelected ? \"selected\" : \"\"}\n    >\n      <td>{account ? <Account accountId={account.accountId} /> : \"...\"}</td>\n      <td className=\"text-nowrap\">\n        <small>\n          <Balance account={account} />\n        </small>\n      </td>\n    </tr>\n  );\n};\n\nconst Account = (props) => {\n  const accountId = props.accountId;\n  const shortAccountId =\n    accountId.length > 6 + 6 + 3\n      ? accountId.slice(0, 6) + \"...\" + accountId.slice(-6)\n      : accountId;\n  return (\n    <a className=\"account\" href={`https://wayback.berryclub.io/${accountId}`}>\n      {shortAccountId}\n    </a>\n  );\n};\n\nexport default App;\n","import \"./Weapons.scss\";\nimport React from \"react\";\nimport Files from \"react-files\";\n\nconst Avocado = (\n  <span role=\"img\" aria-label=\"avocado\" className=\"berry\">\n    🥑\n  </span>\n);\n\nexport class Weapons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.state = {\n      width: 48,\n      height: 28,\n      avocadoNeeded: 100,\n      lockedAspect: true,\n    };\n  }\n\n  componentDidMount() {\n    this.canvas = this.canvasRef.current;\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.sourceImage = new Image();\n    this.sourceImage.onload = () => {\n      this.draw();\n    };\n    this.sourceImage.src = \"/bfg.png\";\n  }\n\n  draw() {\n    const sourceImage = this.sourceImage;\n    const canvas = this.canvas;\n    const ctx = this.ctx;\n    const width = this.state.width;\n    const height = this.state.height;\n\n    // Create a canvas with the desired dimensions\n    canvas.width = width;\n    canvas.height = height;\n    canvas.style.width = width * 10 + \"px\";\n    canvas.style.height = height * 10 + \"px\";\n\n    // Scale and draw the source image to the canvas\n    ctx.clearRect(0, 0, width, height);\n    ctx.imageSmoothingQuality = \"low\";\n    ctx.drawImage(sourceImage, 0, 0, width, height);\n\n    const imageData = ctx.getImageData(0, 0, width, height);\n    this.imageData = imageData;\n    this.setState({\n      avocadoNeeded: new Uint32Array(imageData.data.buffer).reduce(\n        (sum, v) => sum + (v ? 1 : 0),\n        0\n      ),\n    });\n  }\n\n  async onFilesChange(f) {\n    const sourceImage = this.sourceImage;\n    let reader = new FileReader();\n\n    reader.readAsDataURL(f[0]);\n\n    sourceImage.onload = () => {\n      let width = sourceImage.naturalWidth;\n      let height = sourceImage.naturalHeight;\n      if (sourceImage.naturalWidth > 50 || sourceImage.naturalHeight > 50) {\n        const aspect = width / height;\n        width = Math.round(20 * Math.min(1, aspect));\n        height = Math.round(20 * Math.min(1, 1 / aspect));\n      }\n      this.setState({\n        width: Math.min(50, Math.max(1, width)),\n        height: Math.min(50, Math.max(1, height)),\n      });\n      this.draw();\n    };\n\n    reader.onload = function (event) {\n      sourceImage.src = event.target.result;\n    };\n  }\n\n  async onFilesError(e, f) {\n    console.log(e, f);\n  }\n\n  updateVal(key, value) {\n    value = Math.min(50, Math.max(1, value));\n    if (this.state.lockedAspect) {\n      const aspect =\n        this.sourceImage.naturalWidth / this.sourceImage.naturalHeight;\n      let width, height;\n      if (key === \"width\") {\n        width = value;\n        height = Math.round(width / aspect);\n      } else {\n        height = value;\n        width = Math.round(height * aspect);\n      }\n      this.setState(\n        {\n          width: Math.min(50, Math.max(1, width)),\n          height: Math.min(50, Math.max(1, height)),\n        },\n        () => {\n          this.draw();\n        }\n      );\n    } else {\n      this.setState(\n        {\n          [key]: value,\n        },\n        () => {\n          this.draw();\n        }\n      );\n    }\n  }\n\n  changeLockedAspect() {\n    this.setState({\n      lockedAspect: !this.state.lockedAspect,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"weapons-popup\">\n        <div className=\"weapons-content\">\n          <h2>So you need a BFG?</h2>\n          <div>\n            <Files\n              type=\"button\"\n              className=\"btn\"\n              onChange={(f) => this.onFilesChange(f)}\n              onError={(e, f) => this.onFilesError(e, f)}\n              multiple={false}\n              accepts={[\"image/*\"]}\n              minFileSize={1}\n              clickable\n            >\n              Click to upload an image\n            </Files>\n          </div>\n          <div>\n            <label>Width</label>\n            <input\n              type=\"number\"\n              value={this.state.width}\n              min={1}\n              max={50}\n              onChange={(e) => this.updateVal(\"width\", e.target.value)}\n            />{\" \"}\n            <button\n              className={\n                \"btn btn-outline-secondary low-right-margin\" +\n                (this.state.lockedAspect ? \" btn-pressed\" : \" btn-not-pressed\")\n              }\n              onClick={() => this.changeLockedAspect()}\n            >\n              <span role=\"img\" aria-label=\"link\" className=\"berry\">\n                🔗\n              </span>\n            </button>\n            <label>Height</label>\n            <input\n              type=\"number\"\n              value={this.state.height}\n              min={1}\n              max={50}\n              onChange={(e) => this.updateVal(\"height\", e.target.value)}\n            />\n          </div>\n          <button\n            className=\"btn btn-success btn-large\"\n            disabled={\n              !this.props.account ||\n              (!this.props.isFreeDrawing &&\n                this.props.account.avocadoBalance < this.state.avocadoNeeded)\n            }\n            onClick={() =>\n              this.props.renderIt(this.imageData, this.state.avocadoNeeded)\n            }\n          >\n            Render on the board using {this.state.avocadoNeeded} {Avocado}\n          </button>\n          <button\n            className=\"btn btn-primary btn-large\"\n            onClick={() => this.props.enableWatchMode()}\n          >\n            Enable watch mode\n          </button>\n          <div className=\"canvas-wrapper\">\n            <canvas\n              ref={this.canvasRef}\n              width={480}\n              height={280}\n              className=\"draw-preview\"\n            ></canvas>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}